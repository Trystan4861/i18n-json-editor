{"version":3,"file":"extension.js","mappings":"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","sources":["../.././src/ei18n-json-editor/eije-manager.ts","../.././src/i18n/translations.ts","../.././src/ei18n-json-editor/eije-configuration.ts","../.././src/ei18n-json-editor/providers/eije-editor-provider.ts","../../external commonjs \"vscode\"","../.././src/ei18n-json-editor/services/eije-translation-service.ts","../.././node_modules/axios/dist/browser/axios.cjs","../.././src/ei18n-json-editor/eije-data.ts","../.././src/ei18n-json-editor/services/eije-filesystem.ts","../.././src/ei18n-json-editor/services/eije-data-render-service.ts","../.././src/i18n/i18n-service.ts","../.././src/ei18n-json-editor/models/eije-data-translation.ts","../.././node_modules/process/browser.js","../.././src/ei18n-json-editor/models/eije-view.ts","../.././src/ei18n-json-editor/services/translations/eije-microsoft-translator.ts","../.././src/ei18n-json-editor/services/notification-service.ts","../.././node_modules/path-browserify/index.js","../../webpack/bootstrap","../../webpack/runtime/global","../.././src/extension.ts"],"sourcesContent":["import * as vscode from 'vscode';\r\nimport * as _path from 'path';\r\nimport { EIJEFileSystem } from './services/eije-filesystem';\r\n\r\nimport { EIJEConfiguration } from './eije-configuration';\r\nimport { EIJEData } from './eije-data';\r\nimport { EIJEDataTranslation } from './models/eije-data-translation';\r\nimport { I18nService } from '../i18n/i18n-service';\r\nimport { NotificationService } from './services/notification-service';\r\n\r\nexport class EIJEManager {\r\n    get isWorkspace() {\r\n        return this.folderPath === null;\r\n    }\r\n    private _data: EIJEData;\r\n\r\n    // Mantener un registro de la configuración anterior\r\n    private _previousAllowEmptyTranslations: boolean;\r\n    \r\n    constructor(private _context: vscode.ExtensionContext, private _panel: vscode.WebviewPanel, public folderPath: string) {\r\n        \r\n        // Configurar el servicio de notificaciones con el panel webview\r\n        NotificationService.getInstance().setWebviewPanel(this._panel);\r\n        \r\n        // Inicializar configuración de forma asíncrona en entorno web\r\n        EIJEConfiguration.initializeConfigurationAsync().then(() => {\r\n            // Después de cargar la configuración, enviar al frontend\r\n            this._panel.webview.postMessage({ \r\n                command: 'configurationUpdate', \r\n                allowEmptyTranslations: EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS,\r\n                defaultLanguage: EIJEConfiguration.DEFAULT_LANGUAGE,\r\n                forceKeyUPPERCASE: EIJEConfiguration.FORCE_KEY_UPPERCASE\r\n            });\r\n        }).catch(error => {\r\n            console.error('Error initializing configuration:', error);\r\n        });\r\n        \r\n        // Guardar/inicializar el archivo de configuración (método síncrono para desktop)\r\n        EIJEConfiguration.saveFullConfiguration();\r\n        \r\n        // Almacenar el valor actual de allowEmptyTranslations\r\n        this._previousAllowEmptyTranslations = EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS;\r\n        \r\n        // Configurar un listener para cambios en la configuración\r\n        this._context.subscriptions.push(\r\n            vscode.workspace.onDidChangeConfiguration(e => {\r\n                if (e.affectsConfiguration('i18nJsonEditor.allowEmptyTranslations')) {\r\n                    // Si cambió la configuración de allowEmptyTranslations\r\n                    const newAllowEmptyValue = EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS;\r\n                    \r\n                    // Solo actualizar si realmente cambió el valor\r\n                    if (this._previousAllowEmptyTranslations !== newAllowEmptyValue) {\r\n                        this._previousAllowEmptyTranslations = newAllowEmptyValue;\r\n                        \r\n                        // Revalidar todas las traducciones con la nueva configuración\r\n                        this._data._revalidateAllTranslations();\r\n                        \r\n                        // Actualizar UI con el nuevo estado\r\n                        const currentPage = this._data.getCurrentPage();\r\n                        this.checkEmptyTranslations(currentPage);\r\n                        \r\n                        // Refrescar la tabla de datos para mostrar posibles nuevos errores\r\n                        this.refreshDataTable();\r\n                    }\r\n                }\r\n            })\r\n        );\r\n        \r\n        this._data = new EIJEData(this);\r\n        this._initEvents();\r\n        this._initTemplate();\r\n        \r\n        // Inicializar el template de forma asíncrona\r\n        this.initializeTemplate();\r\n        \r\n        // Inicializar datos de forma asíncrona\r\n        this._initializeData();\r\n        \r\n        // Guardar la configuración cuando se cierra el panel\r\n        this._panel.onDidDispose(() => {\r\n            EIJEConfiguration.saveFullConfiguration();\r\n        });\r\n    }\r\n\r\n    private async initializeTemplate(): Promise<void> {\r\n        try {\r\n            const templateHtml = await this.getTemplateAsync();\r\n            this._panel.webview.html = templateHtml;\r\n        } catch (error) {\r\n            console.error('Error initializing template:', error);\r\n            this._panel.webview.html = '<html><body><h1>Error loading template</h1><p>' + error + '</p></body></html>';\r\n        }\r\n    }\r\n\r\n    private async _initializeData(): Promise<void> {\r\n        try {\r\n            // Establecer la carpeta de trabajo inicial\r\n            await this.setInitialWorkspaceFolder();\r\n            \r\n            await this._data.initialize();\r\n            \r\n            // Limpiar idiomas eliminados de las listas de visibles/ocultos\r\n            await this.cleanupDeletedLanguages();\r\n            \r\n            // Inicializar el selector de carpetas de trabajo\r\n            this.initializeWorkspaceFolderSelector();\r\n            \r\n            this.refreshDataTable();\r\n        } catch (error) {\r\n            console.error('Error initializing data:', error);\r\n        }\r\n    }\r\n    \r\n    // Método para obtener la ruta de la carpeta actual\r\n    getFolderPath(): string | null {\r\n        return this.folderPath;\r\n    }\r\n    \r\n    // Método para actualizar la ruta de la carpeta y recargar los datos\r\n    async updateFolderPath(folderPath: string | null): Promise<void> {\r\n        this.folderPath = folderPath;\r\n        await this.reloadData();\r\n    }\r\n\r\n    _initEvents() {\r\n        this._panel.webview.onDidReceiveMessage(async (message) => {\r\n            switch (message.command) {\r\n                case 'add':\r\n                    this._data.add();\r\n                    return;\r\n                case 'mark':\r\n                    this._data.mark(message.id);\r\n                    return;\r\n                case 'navigate':\r\n                    this._data.navigate(message.page);\r\n                    return;\r\n                case 'pageSize':\r\n                    this._data.pageSize(+message.value);\r\n                    return;\r\n                case 'refresh':\r\n                    this.refreshDataTable();\r\n                    return;\r\n                case 'reload':\r\n                    this.reloadData().catch(error => console.error('Error reloading data:', error));\r\n                    return;\r\n                case 'showNewLanguageInput':\r\n                    this._showNewLanguageInput();\r\n                    return;\r\n                case 'newLanguage':\r\n                    this.createNewLanguage(message.langCode);\r\n                    return;\r\n                case 'remove':\r\n                    this._data.remove(message.id);\r\n                    return;\r\n                case 'save':\r\n                    await this._data.save();\r\n                    return;\r\n                case 'switchWorkspaceFolder':\r\n                    await this.switchWorkspaceFolder(message.folderName);\r\n                    return;\r\n                case 'saveAndSwitchWorkspaceFolder':\r\n                    await this._data.save();\r\n                    await this.switchWorkspaceFolder(message.folderName);\r\n                    return;\r\n                case 'discardAndSwitchWorkspaceFolder':\r\n                    await this.discardChangesAndSwitchWorkspaceFolder(message.folderName);\r\n                    return;\r\n                case 'discardChanges':\r\n                    await this.discardChanges();\r\n                    return;\r\n                case 'search':\r\n                    this._data.search(message.value);\r\n                    return;\r\n                case 'select':\r\n                    this._data.select(message.id);\r\n                    return;\r\n                case 'sort':\r\n                    this._data.sort(message.column, message.ascending);\r\n                    return;\r\n                case 'switch-view':\r\n                    this._data.switchView(message.view);\r\n                    return;\r\n                case 'update':\r\n                    this._data.update(message.id, message.value, message.language);\r\n                    return;\r\n                case 'translate':\r\n                    this._data.translate(message.id, message.language);\r\n                    return;\r\n\r\n                case 'toggleColumn':\r\n                    this.toggleColumnVisibility(message.language, message.visible);\r\n                    return;\r\n                case 'updateColumnVisibility':\r\n                    this.updateColumnVisibility(message.columnsToShow, message.columnsToHide);\r\n                    return;\r\n                case 'checkEmptyTranslations':\r\n                    this.checkEmptyTranslations(message.currentPage);\r\n                    return;\r\n                case 'navigateToNextEmptyTranslation':\r\n                    this.navigateToNextEmptyTranslation();\r\n                    return;\r\n            }\r\n        });\r\n    }\r\n    \r\n    toggleColumnVisibility(language: string, visible: boolean) {\r\n        // No se permite ocultar la columna 'key' ni el idioma por defecto\r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        if (language === 'key' || language === defaultLanguage) {\r\n            return;\r\n        }\r\n        \r\n        // Limpiar caché antes de leer la configuración actual\r\n        EIJEConfiguration.clearConfigCache();\r\n        \r\n        // Forzar recarga de configuración\r\n        let visibleColumns = [...EIJEConfiguration.VISIBLE_COLUMNS];\r\n        let hiddenColumns = [...EIJEConfiguration.HIDDEN_COLUMNS];\r\n        \r\n        if (visible) {\r\n            // Mostrar columna\r\n            if (!visibleColumns.includes(language)) {\r\n                visibleColumns.push(language);\r\n            }\r\n            // Eliminar de columnas ocultas si existe\r\n            hiddenColumns = hiddenColumns.filter(col => col !== language);\r\n        } else {\r\n            // Ocultar columna\r\n            visibleColumns = visibleColumns.filter(col => col !== language);\r\n            // Añadir a columnas ocultas si no existe\r\n            if (!hiddenColumns.includes(language)) {\r\n                hiddenColumns.push(language);\r\n            }\r\n        }\r\n        \r\n        // Guardar configuración de forma asíncrona\r\n        Promise.all([\r\n            EIJEConfiguration.saveVisibleColumns(visibleColumns),\r\n            EIJEConfiguration.saveHiddenColumns(hiddenColumns)\r\n        ]).then(() => {\r\n            // Guardar la configuración completa para mantener el archivo actualizado\r\n            EIJEConfiguration.saveFullConfiguration();\r\n            \r\n            // Limpiar caché específico para forzar recarga\r\n            EIJEConfiguration.clearConfigCache('visibleColumns');\r\n            EIJEConfiguration.clearConfigCache('hiddenColumns');\r\n            \r\n            // Actualizar la tabla después de un pequeño delay\r\n            setTimeout(() => {\r\n                this.refreshDataTable();\r\n            }, 100);\r\n        });\r\n    }\r\n    \r\n    updateColumnVisibility(columnsToShow: string[], columnsToHide: string[]) {\r\n        \r\n        const allLanguages = this._data.getLanguages();\r\n        let newVisibleColumns: string[] = [];\r\n        let newHiddenColumns: string[] = [];\r\n        \r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        allLanguages.forEach(language => {\r\n            if (language === defaultLanguage) {\r\n                return;\r\n            }\r\n            \r\n            if (columnsToShow.includes(language)) {\r\n                newVisibleColumns.push(language);\r\n            } else if (columnsToHide.includes(language)) {\r\n                newHiddenColumns.push(language);\r\n            } else {\r\n                const currentVisible = EIJEConfiguration.VISIBLE_COLUMNS;\r\n                const currentHidden = EIJEConfiguration.HIDDEN_COLUMNS;\r\n                \r\n                if (currentVisible.includes(language)) {\r\n                    newVisibleColumns.push(language);\r\n                } else if (currentHidden.includes(language)) {\r\n                    newHiddenColumns.push(language);\r\n                } else {\r\n                    newVisibleColumns.push(language);\r\n                }\r\n            }\r\n        });\r\n        \r\n        // Guardar configuración de forma asíncrona\r\n        Promise.all([\r\n            EIJEConfiguration.saveVisibleColumns(newVisibleColumns),\r\n            EIJEConfiguration.saveHiddenColumns(newHiddenColumns)\r\n        ]).then(() => {\r\n            // Limpiar caché específico para forzar recarga\r\n            EIJEConfiguration.clearConfigCache('visibleColumns');\r\n            EIJEConfiguration.clearConfigCache('hiddenColumns');\r\n            \r\n            // Forzar actualización completa de la configuración\r\n            EIJEConfiguration.saveFullConfiguration();\r\n            \r\n            // Esperar un momento antes de actualizar la tabla para asegurar que la configuración se guarde\r\n            setTimeout(() => {\r\n                this.refreshDataTable();\r\n            }, 100);\r\n        });\r\n    }\r\n    \r\n    async reloadData(): Promise<void> {\r\n        // Guardar la configuración completa\r\n        EIJEConfiguration.saveFullConfiguration();\r\n        \r\n        this._data = new EIJEData(this);\r\n        await this._data.initialize();\r\n        this.refreshDataTable();\r\n        const i18n = I18nService.getInstance();\r\n        NotificationService.getInstance().showInformationMessage(i18n.t('ui.messages.reloaded'));\r\n    }\r\n    \r\n    async _showNewLanguageInput() {\r\n        const i18n = I18nService.getInstance();\r\n        // Show VS Code input box to get language code\r\n        const langCode = await vscode.window.showInputBox({\r\n            prompt: i18n.t('ui.prompts.enterLanguageCode'),\r\n            placeHolder: i18n.t('ui.prompts.languageCodePlaceholder'),\r\n            validateInput: (value: string) => {\r\n                if (!value || value.trim() === '') {\r\n                    return i18n.t('ui.messages.languageCodeEmpty');\r\n                }\r\n                if (value.length > 5) {\r\n                    return i18n.t('ui.messages.languageCodeTooLong');\r\n                }\r\n                return null; // Input is valid\r\n            }\r\n        });\r\n\r\n        // If user provided a language code, create the language file\r\n        if (langCode) {\r\n            this.createNewLanguage(langCode).catch(error => console.error('Error creating new language:', error));\r\n        }\r\n    }\r\n\r\n    async createNewLanguage(langCode: string): Promise<void> {\r\n        const i18n = I18nService.getInstance();\r\n        \r\n        if (!langCode || langCode.length > 5) {\r\n            NotificationService.getInstance().showErrorMessage(i18n.t('ui.messages.languageCodeInvalid'));\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            let targetPath: string;\r\n            \r\n            if (this.folderPath) {\r\n                // Use the current folder if opened from a specific folder\r\n                targetPath = this.folderPath;\r\n            } else if (EIJEConfiguration.WORKSPACE_FOLDERS && EIJEConfiguration.WORKSPACE_FOLDERS.length > 0) {\r\n                // Use the first workspace folder if opened from workspace\r\n                targetPath = EIJEConfiguration.WORKSPACE_FOLDERS[0].path;\r\n            } else {\r\n                NotificationService.getInstance().showErrorMessage(i18n.t('ui.messages.noTargetFolder'));\r\n                return;\r\n            }\r\n            \r\n            const filePath = _path.join(targetPath, `${langCode}.json`);\r\n            \r\n            // Check if file already exists\r\n            if (await EIJEFileSystem.exists(filePath)) {\r\n                NotificationService.getInstance().showWarningMessage(i18n.t('ui.messages.languageFileExists', `${langCode}.json`));\r\n                return;\r\n            }\r\n            \r\n            // Check if English template file exists\r\n            const englishFilePath = _path.join(targetPath, 'en.json');\r\n            let jsonContent = {};\r\n            \r\n            if (await EIJEFileSystem.exists(englishFilePath)) {\r\n                try {\r\n                    // Use English file as template\r\n                    const englishContent = await EIJEFileSystem.readFile(englishFilePath);\r\n                    jsonContent = JSON.parse(englishContent);\r\n                    NotificationService.getInstance().showInformationMessage(i18n.t('ui.messages.createdWithTemplate', `${langCode}.json`));\r\n                } catch (err) {\r\n                    // If there's an error reading/parsing the English file, use empty object\r\n                    NotificationService.getInstance().showWarningMessage(i18n.t('ui.messages.templateReadError'));\r\n                }\r\n            } else {\r\n                NotificationService.getInstance().showInformationMessage(i18n.t('ui.messages.templateNotFound'));\r\n            }\r\n            \r\n            // Create new language file\r\n            const fileContent = JSON.stringify(jsonContent, null, EIJEConfiguration.JSON_SPACE);\r\n            await EIJEFileSystem.writeFile(filePath, fileContent);\r\n            \r\n            NotificationService.getInstance().showInformationMessage(i18n.t('ui.messages.languageFileCreated', `${langCode}.json`));\r\n            \r\n            // Agregar el nuevo idioma como visible por defecto\r\n            await this.addLanguageAsVisible(langCode);\r\n            \r\n            // Guardar la configuración completa\r\n            EIJEConfiguration.saveFullConfiguration();\r\n            \r\n            // Reload the editor to show the new language\r\n            await this.reloadData();\r\n        } catch (error) {\r\n            const errorMessage = error instanceof Error ? error.message : String(error);\r\n            NotificationService.getInstance().showErrorMessage(i18n.t('ui.messages.fileCreationError', errorMessage));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Agregar un idioma como visible por defecto\r\n     */\r\n    private async addLanguageAsVisible(langCode: string): Promise<void> {\r\n        try {\r\n            // Limpiar caché antes de leer la configuración actual\r\n            EIJEConfiguration.clearConfigCache();\r\n            \r\n            // Obtener las columnas actuales\r\n            let visibleColumns = [...EIJEConfiguration.VISIBLE_COLUMNS];\r\n            let hiddenColumns = [...EIJEConfiguration.HIDDEN_COLUMNS];\r\n            \r\n            // Remover el idioma de ocultos si estaba ahí\r\n            hiddenColumns = hiddenColumns.filter(col => col !== langCode);\r\n            \r\n            // Agregar a visibles si no está ya\r\n            if (!visibleColumns.includes(langCode)) {\r\n                visibleColumns.push(langCode);\r\n            }\r\n            \r\n            // Guardar la configuración actualizada\r\n            await EIJEConfiguration.saveVisibleColumns(visibleColumns);\r\n            await EIJEConfiguration.saveHiddenColumns(hiddenColumns);\r\n            \r\n        } catch (error) {\r\n            console.error('Error adding language as visible:', error);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Limpiar idiomas eliminados de las listas de visibles/ocultos\r\n     */\r\n    private async cleanupDeletedLanguages(): Promise<void> {\r\n        try {\r\n            // Obtener idiomas disponibles actualmente\r\n            const availableLanguages = this._data.getLanguages();\r\n            \r\n            // Limpiar caché antes de leer la configuración actual\r\n            EIJEConfiguration.clearConfigCache();\r\n            \r\n            // Obtener la carpeta de trabajo actual\r\n            const currentWorkspaceFolder = EIJEConfiguration.DEFAULT_WORKSPACE_FOLDER;\r\n            \r\n            // Obtener las columnas actuales (específicas para la carpeta actual)\r\n            let visibleColumns = [...EIJEConfiguration.VISIBLE_COLUMNS];\r\n            let hiddenColumns = [...EIJEConfiguration.HIDDEN_COLUMNS];\r\n            \r\n            // Filtrar columnas visibles para mantener solo idiomas que existen\r\n            const originalVisibleCount = visibleColumns.length;\r\n            visibleColumns = visibleColumns.filter(col => \r\n                col === 'key' || availableLanguages.includes(col)\r\n            );\r\n            \r\n            // Filtrar columnas ocultas para mantener solo idiomas que existen\r\n            const originalHiddenCount = hiddenColumns.length;\r\n            hiddenColumns = hiddenColumns.filter(col => \r\n                availableLanguages.includes(col)\r\n            );\r\n            \r\n            // Solo guardar si hubo cambios\r\n            if (visibleColumns.length !== originalVisibleCount || \r\n                hiddenColumns.length !== originalHiddenCount) {\r\n                \r\n                await EIJEConfiguration.saveVisibleColumns(visibleColumns);\r\n                await EIJEConfiguration.saveHiddenColumns(hiddenColumns);\r\n                \r\n                console.log('Cleaned up deleted languages from visibility configuration');\r\n            }\r\n            \r\n            // Limpiar también todas las configuraciones de carpetas de trabajo\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = _path.join(workspaceFolder.uri.fsPath, '.vscode', '.ei18n-editor-config.json');\r\n                \r\n                if (EIJEFileSystem.existsSync(configPath)) {\r\n                    const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                    const config = JSON.parse(configContent);\r\n                    \r\n                    // Limpiar las configuraciones globales\r\n                    if (config.visibleColumns) {\r\n                        const originalGlobalVisibleCount = config.visibleColumns.length;\r\n                        config.visibleColumns = config.visibleColumns.filter((col: string) => \r\n                            col === 'key' || availableLanguages.includes(col)\r\n                        );\r\n                        \r\n                        if (config.visibleColumns.length !== originalGlobalVisibleCount) {\r\n                            // Guardar la configuración actualizada\r\n                            EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                            console.log('Cleaned up deleted languages from global visibility configuration');\r\n                        }\r\n                    }\r\n                    \r\n                    if (config.hiddenColumns) {\r\n                        const originalGlobalHiddenCount = config.hiddenColumns.length;\r\n                        config.hiddenColumns = config.hiddenColumns.filter((col: string) => \r\n                            availableLanguages.includes(col)\r\n                        );\r\n                        \r\n                        if (config.hiddenColumns.length !== originalGlobalHiddenCount) {\r\n                            // Guardar la configuración actualizada\r\n                            EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                            console.log('Cleaned up deleted languages from global visibility configuration');\r\n                        }\r\n                    }\r\n                    \r\n                    // Limpiar las configuraciones específicas por carpeta\r\n                    if (config.workspaceFolders && Array.isArray(config.workspaceFolders)) {\r\n                        let configUpdated = false;\r\n                        \r\n                        // Recorrer todas las carpetas de trabajo\r\n                        config.workspaceFolders.forEach((folder: any) => {\r\n                            // Limpiar visibleColumns\r\n                            if (folder.visibleColumns && Array.isArray(folder.visibleColumns)) {\r\n                                const originalFolderVisibleCount = folder.visibleColumns.length;\r\n                                folder.visibleColumns = folder.visibleColumns.filter((col: string) => \r\n                                    col === 'key' || availableLanguages.includes(col)\r\n                                );\r\n                                \r\n                                if (folder.visibleColumns.length !== originalFolderVisibleCount) {\r\n                                    configUpdated = true;\r\n                                }\r\n                            }\r\n                            \r\n                            // Limpiar hiddenColumns\r\n                            if (folder.hiddenColumns && Array.isArray(folder.hiddenColumns)) {\r\n                                const originalFolderHiddenCount = folder.hiddenColumns.length;\r\n                                folder.hiddenColumns = folder.hiddenColumns.filter((col: string) => \r\n                                    availableLanguages.includes(col)\r\n                                );\r\n                                \r\n                                if (folder.hiddenColumns.length !== originalFolderHiddenCount) {\r\n                                    configUpdated = true;\r\n                                }\r\n                            }\r\n                        });\r\n                        \r\n                        // Si se actualizó alguna configuración, guardar el archivo\r\n                        if (configUpdated) {\r\n                            EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                            console.log('Cleaned up deleted languages from workspace folders configuration');\r\n                        }\r\n                    }\r\n                    \r\n                    // Eliminar configuraciones específicas por carpeta en el nivel raíz\r\n                    let rootConfigUpdated = false;\r\n                    Object.keys(config).forEach(key => {\r\n                        if (key.startsWith('visibleColumns_') || key.startsWith('hiddenColumns_')) {\r\n                            delete config[key];\r\n                            rootConfigUpdated = true;\r\n                        }\r\n                    });\r\n                    \r\n                    // Si se eliminaron configuraciones en el nivel raíz, guardar el archivo\r\n                    if (rootConfigUpdated) {\r\n                        EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                        console.log('Removed legacy workspace-specific configurations from root level');\r\n                    }\r\n                }\r\n            }\r\n            \r\n        } catch (error) {\r\n            console.error('Error cleaning up deleted languages:', error);\r\n        }\r\n    }\r\n    \r\n    checkEmptyTranslations(currentPage: number) {\r\n        // Check for empty translations on the current page\r\n        const emptyTranslations = this._data.findEmptyTranslations(currentPage);\r\n        \r\n        // Count all empty translations in the entire dataset\r\n        const emptyTranslationsCount = this._data.countEmptyTranslations();\r\n        \r\n        // Solo considerar las traducciones vacías como error si no están permitidas\r\n        const allowEmptyTranslations = EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS;\r\n        const hasError = !allowEmptyTranslations && emptyTranslationsCount.hasEmpty;\r\n        \r\n        this._panel.webview.postMessage({ \r\n            command: 'emptyTranslationsFound', \r\n            emptyTranslations: emptyTranslations,\r\n            hasEmptyTranslations: hasError,\r\n            allowEmptyTranslations: EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS,\r\n            hasAnyEmptyTranslations: emptyTranslationsCount.hasEmpty,\r\n            totalEmptyCount: emptyTranslationsCount.count\r\n        });\r\n    }\r\n    \r\n    navigateToNextEmptyTranslation() {\r\n        // Find and navigate to the next empty translation\r\n        const nextEmptyTranslation = this._data.findNextEmptyTranslation();\r\n        if (nextEmptyTranslation) {\r\n            // If an empty translation is found, navigate to its page and select it\r\n            this._data.navigate(nextEmptyTranslation.page, true); // Skip refresh\r\n            this._data.select(nextEmptyTranslation.id, true); // Skip refresh\r\n            \r\n            // Luego actualizamos la interfaz una sola vez\r\n            this.refreshDataTable();\r\n            \r\n            // También debemos enviar un mensaje para actualizar la información de traducciones vacías\r\n            this.checkEmptyTranslations(nextEmptyTranslation.page);\r\n        } else {\r\n            // If no empty translation is found, show a message\r\n            const i18n = I18nService.getInstance();\r\n            NotificationService.getInstance().showInformationMessage(i18n.t('ui.messages.noEmptyTranslations'));\r\n        }\r\n    }\r\n\r\n    _initTemplate() {\r\n        if (this.isWorkspace) {\r\n            this._panel.webview.postMessage({ command: 'folders', folders: EIJEConfiguration.WORKSPACE_FOLDERS });\r\n        }\r\n        \r\n        // Enviar configuración inicial al frontend, especialmente importante en entorno web\r\n        this._panel.webview.postMessage({ \r\n            command: 'configurationUpdate', \r\n            allowEmptyTranslations: EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS,\r\n            defaultLanguage: EIJEConfiguration.DEFAULT_LANGUAGE,\r\n            forceKeyUPPERCASE: EIJEConfiguration.FORCE_KEY_UPPERCASE\r\n        });\r\n    }\r\n\r\n    refreshDataTable() {\r\n        this._panel.webview.postMessage({ command: 'content', render: this._data.render() });\r\n    }\r\n\r\n    /**\r\n     * Update the translation and refresh the empty translations count\r\n     * @param translation The translation to update\r\n     */\r\n    updateTranslation(translation: EIJEDataTranslation) {\r\n        this._panel.webview.postMessage({ command: 'update', translation: translation });\r\n        \r\n        // Actualizar el contador de traducciones faltantes después de cada modificación\r\n        const currentPage = this._data.getCurrentPage();\r\n        this.checkEmptyTranslations(currentPage);\r\n    }\r\n    \r\n    /**\r\n     * Envía un mensaje al frontend\r\n     * @param message El mensaje a enviar\r\n     */\r\n    postMessage(message: any) {\r\n        this._panel.webview.postMessage(message);\r\n    }\r\n    \r\n    /**\r\n     * Envía un mensaje al frontend con el resultado del guardado\r\n     * @param success Indica si el guardado fue exitoso\r\n     */\r\n    sendSaveResult(success: boolean) {\r\n        // Contar traducciones vacías para actualizar el estado de la UI\r\n        const emptyTranslationsCount = this._data.countEmptyTranslations();\r\n        const hasEmptyTranslations = emptyTranslationsCount.hasEmpty;\r\n        \r\n        this._panel.webview.postMessage({ \r\n            command: 'saveResult', \r\n            success: success,\r\n            allowEmptyTranslations: EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS,\r\n            hasEmptyTranslations: hasEmptyTranslations\r\n        });\r\n        \r\n        // Actualizar el estado de la UI después de guardar\r\n        const currentPage = this._data.getCurrentPage();\r\n        this.checkEmptyTranslations(currentPage);\r\n    }\r\n\r\n    async getTemplateAsync(): Promise<string> {\r\n        const template = vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'template.html'));\r\n\r\n        const linksPath = [\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'bootstrap.min.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'template.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'tippy.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'font-awesome.min.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'sweetalert2-custom.css'))\r\n        ];\r\n\r\n        const scriptsPath = [\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'jquery.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'bootstrap.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'popper.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'tippy.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'sweetalert2.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'flashy.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'template.js'))\r\n        ];\r\n        \r\n        // Get i18n translations\r\n        const i18n = I18nService.getInstance();\r\n        \r\n        // Helper function to replace i18n template tags\r\n        const replaceI18nTags = (html: string): string => {\r\n            return html.replace(/\\{\\{i18n\\.([^}]+)\\}\\}/g, (match, key) => {\r\n                return i18n.t(key) || match;\r\n            });\r\n        };\r\n\r\n        try {\r\n            const templateContent = await EIJEFileSystem.readFile(template.fsPath);\r\n            \r\n            const linksHtml = linksPath\r\n                .map(l => {\r\n                    const uri = this._panel.webview.asWebviewUri ? this._panel.webview.asWebviewUri(l) : l.with({ scheme: 'vscode-resource' });\r\n                    return `<link rel=\"stylesheet\" href=\"${uri}\">`;\r\n                })\r\n                .join('\\n');\r\n            \r\n            const scriptsHtml = scriptsPath\r\n                .map(l => {\r\n                    const uri = this._panel.webview.asWebviewUri ? this._panel.webview.asWebviewUri(l) : l.with({ scheme: 'vscode-resource' });\r\n                    return `<script src=\"${uri}\"></script>`;\r\n                })\r\n                .join('\\n');\r\n            \r\n            const finalHtml = replaceI18nTags(\r\n                templateContent\r\n                    .replace('{{LINKS}}', linksHtml)\r\n                    .replace('{{SCRIPTS}}', scriptsHtml)\r\n            );\r\n            \r\n            return finalHtml;\r\n            \r\n        } catch (error) {\r\n            console.error('Error generating template:', error);\r\n            return '<html><body><h1>Error loading template</h1><p>' + error + '</p></body></html>';\r\n        }\r\n    }\r\n\r\n    getTemplate(): string {\r\n        const template = vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'template.html'));\r\n\r\n        const linksPath = [\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'bootstrap.min.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'template.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'tippy.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'font-awesome.min.css')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'css', 'sweetalert2-custom.css'))\r\n        ];\r\n\r\n        const scriptsPath = [\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'jquery.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'bootstrap.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'popper.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'tippy.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'sweetalert2.min.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'flashy.js')),\r\n            vscode.Uri.file(_path.join(this._context.extensionPath, 'media', 'js', 'template.js'))\r\n        ];\r\n        \r\n        // Get i18n translations\r\n        const i18n = I18nService.getInstance();\r\n        \r\n        // Helper function to replace i18n template tags\r\n        const replaceI18nTags = (html: string): string => {\r\n            return html.replace(/\\{\\{i18n\\.([^}]+)\\}\\}/g, (match, key) => {\r\n                return i18n.t(key) || match;\r\n            });\r\n        };\r\n\r\n        try {\r\n            const templateContent = EIJEFileSystem.readFileSync(template.fsPath).toString();\r\n            \r\n            const linksHtml = linksPath\r\n                .map(l => {\r\n                    const uri = this._panel.webview.asWebviewUri ? this._panel.webview.asWebviewUri(l) : l.with({ scheme: 'vscode-resource' });\r\n                    return `<link rel=\"stylesheet\" href=\"${uri}\">`;\r\n                })\r\n                .join('\\n');\r\n            \r\n            const scriptsHtml = scriptsPath\r\n                .map(l => {\r\n                    const uri = this._panel.webview.asWebviewUri ? this._panel.webview.asWebviewUri(l) : l.with({ scheme: 'vscode-resource' });\r\n                    return `<script src=\"${uri}\"></script>`;\r\n                })\r\n                .join('\\n');\r\n            \r\n            const finalHtml = replaceI18nTags(\r\n                templateContent\r\n                    .replace('{{LINKS}}', linksHtml)\r\n                    .replace('{{SCRIPTS}}', scriptsHtml)\r\n            );\r\n            return finalHtml;\r\n            \r\n        } catch (error) {\r\n            console.error('Error generating template:', error);\r\n            return '<html><body><h1>Error loading template</h1><p>' + error + '</p></body></html>';\r\n        }\r\n    }\r\n\r\n    // Método para cambiar la carpeta de trabajo\r\n    private async switchWorkspaceFolder(folderName: string): Promise<void> {\r\n        try {\r\n            // Si no hay nombre de carpeta, no hacer nada\r\n            if (!folderName) {\r\n                return;\r\n            }\r\n            \r\n            // Verificar si hay cambios sin guardar\r\n            if (this._data && this._data.hasUnsavedChanges()) {\r\n                // Usar el servicio de notificaciones para mostrar el mensaje de error\r\n                NotificationService.getInstance().showErrorMessage(\r\n                    I18nService.getInstance().t('ui.messages.cannotSwitchWithUnsavedChanges', 'No se puede cambiar de carpeta de trabajo sin guardar o descartar los cambios.')\r\n                );\r\n                \r\n                // Enviar mensaje al frontend para restaurar la selección anterior\r\n                this._panel.webview.postMessage({\r\n                    command: 'restoreWorkspaceFolderSelection',\r\n                    folderName: EIJEConfiguration.DEFAULT_WORKSPACE_FOLDER\r\n                });\r\n                \r\n                return;\r\n            }\r\n            \r\n            // Guardar la carpeta seleccionada como predeterminada\r\n            await EIJEConfiguration.saveDefaultWorkspaceFolder(folderName);\r\n            \r\n            // Limpiar la caché de configuración para forzar la recarga de las columnas visibles/ocultas\r\n            EIJEConfiguration.clearConfigCache('visibleColumns');\r\n            EIJEConfiguration.clearConfigCache('hiddenColumns');\r\n            EIJEConfiguration.clearConfigCache('workspaceFolders');\r\n            \r\n            // Buscar la carpeta en la configuración\r\n            const workspaceFolders = EIJEConfiguration.WORKSPACE_FOLDERS;\r\n            const selectedFolder = workspaceFolders.find(f => f.name === folderName);\r\n            \r\n            if (selectedFolder) {\r\n                // Crear nueva instancia de EIJEData para la nueva carpeta\r\n                this._data = new EIJEData(this);\r\n                \r\n                // Cambiar la ruta de la carpeta\r\n                this.folderPath = selectedFolder.path;\r\n                \r\n                // Reinicializar los datos\r\n                await this._data.initialize();\r\n                \r\n                // Limpiar idiomas eliminados de las listas de visibles/ocultos\r\n                await this.cleanupDeletedLanguages();\r\n                \r\n                // Actualizar la interfaz\r\n                this.refreshDataTable();\r\n                \r\n                // Enviar confirmación al frontend\r\n                this._panel.webview.postMessage({\r\n                    command: 'workspaceFolderChanged',\r\n                    folderName: folderName\r\n                });\r\n                \r\n                // Inicializar el selector de carpetas con la nueva carpeta activa\r\n                this.initializeWorkspaceFolderSelector(folderName);\r\n                \r\n                // Enviar la configuración actualizada al frontend\r\n                this._panel.webview.postMessage({ \r\n                    command: 'configurationUpdate', \r\n                    allowEmptyTranslations: EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS,\r\n                    defaultLanguage: EIJEConfiguration.DEFAULT_LANGUAGE,\r\n                    forceKeyUPPERCASE: EIJEConfiguration.FORCE_KEY_UPPERCASE\r\n                });\r\n                \r\n            } else {\r\n                console.error('Workspace folder not found:', folderName);\r\n            }\r\n        } catch (error) {\r\n            console.error('Error switching workspace folder:', error);\r\n        }\r\n    }\r\n\r\n    // Método para descartar cambios\r\n    private async discardChanges(): Promise<void> {\r\n        try {\r\n            // Descartar cambios en los datos\r\n            if (this._data) {\r\n                await this._data.discardChanges();\r\n            }\r\n            \r\n            // Actualizar la interfaz\r\n            this.refreshDataTable();\r\n            \r\n            // Mostrar mensaje de confirmación\r\n            NotificationService.getInstance().showInformationMessage(I18nService.getInstance().t('ui.messages.changesDiscarded'), true);\r\n        } catch (error) {\r\n            console.error('Error discarding changes:', error);\r\n        }\r\n    }\r\n    \r\n    // Método para descartar cambios y cambiar de carpeta\r\n    private async discardChangesAndSwitchWorkspaceFolder(folderName: string): Promise<void> {\r\n        try {\r\n            // Descartar cambios\r\n            await this.discardChanges();\r\n            \r\n            // Cambiar de carpeta\r\n            await this.switchWorkspaceFolder(folderName);\r\n        } catch (error) {\r\n            console.error('Error discarding changes and switching workspace folder:', error);\r\n        }\r\n    }\r\n\r\n    // Método para establecer la carpeta de trabajo inicial\r\n    private async setInitialWorkspaceFolder(): Promise<void> {\r\n        const workspaceFolders = EIJEConfiguration.WORKSPACE_FOLDERS;\r\n        \r\n        if (workspaceFolders.length === 0) {\r\n            return;\r\n        }\r\n        \r\n        // Obtener la carpeta por defecto de la configuración\r\n        const defaultFolder = EIJEConfiguration.DEFAULT_WORKSPACE_FOLDER;\r\n        let selectedFolder: any = null;\r\n        \r\n        // Si hay una carpeta específica proporcionada al abrir la extensión, usarla\r\n        if (this.folderPath) {\r\n            // Verificar si la carpeta proporcionada está en la lista de carpetas de trabajo\r\n            const matchingFolder = workspaceFolders.find(f => f.path === this.folderPath);\r\n            if (matchingFolder) {\r\n                // Si la carpeta está en la lista, usarla\r\n                selectedFolder = matchingFolder;\r\n            } else if (defaultFolder && workspaceFolders.some(f => f.name === defaultFolder)) {\r\n                // Si la carpeta no está en la lista pero hay una carpeta por defecto, usarla\r\n                selectedFolder = workspaceFolders.find(f => f.name === defaultFolder);\r\n            }\r\n            // Si no hay carpeta por defecto, no seleccionar ninguna automáticamente\r\n        } else if (defaultFolder && workspaceFolders.some(f => f.name === defaultFolder)) {\r\n            // Si no hay folderPath específico pero hay una carpeta por defecto, usarla\r\n            selectedFolder = workspaceFolders.find(f => f.name === defaultFolder);\r\n        }\r\n        // Si no hay carpeta por defecto, no seleccionar ninguna automáticamente\r\n        \r\n        // Actualizar el folderPath con la carpeta seleccionada\r\n        if (selectedFolder) {\r\n            this.folderPath = selectedFolder.path;\r\n            \r\n            // Si la carpeta seleccionada es diferente a la carpeta por defecto, actualizar la configuración\r\n            if (selectedFolder.name !== defaultFolder) {\r\n                await EIJEConfiguration.saveDefaultWorkspaceFolder(selectedFolder.name);\r\n            }\r\n        } else {\r\n            // Si no hay carpeta seleccionada, limpiar el folderPath para que no se carguen datos\r\n            this.folderPath = '';\r\n        }\r\n    }\r\n\r\n    // Método para inicializar el selector de carpetas de trabajo\r\n    private initializeWorkspaceFolderSelector(currentFolder?: string): void {\r\n        const workspaceFolders = EIJEConfiguration.WORKSPACE_FOLDERS;\r\n        \r\n        console.log('Initializing workspace folder selector:', { workspaceFolders, currentFolder, folderPath: this.folderPath });\r\n        \r\n        if (workspaceFolders.length === 0) {\r\n            console.log('No workspace folders found');\r\n            return;\r\n        }\r\n        \r\n        // Determinar la carpeta actual\r\n        let activeFolder = currentFolder;\r\n        if (!activeFolder) {\r\n            // Buscar la carpeta que corresponde al folderPath actual\r\n            const currentFolderObj = workspaceFolders.find(f => f.path === this.folderPath);\r\n            if (currentFolderObj) {\r\n                activeFolder = currentFolderObj.name;\r\n            } else {\r\n                const defaultFolder = EIJEConfiguration.DEFAULT_WORKSPACE_FOLDER;\r\n                if (defaultFolder && workspaceFolders.some(f => f.name === defaultFolder)) {\r\n                    activeFolder = defaultFolder;\r\n                }\r\n                // Si no hay carpeta por defecto, no seleccionar ninguna automáticamente\r\n            }\r\n        }\r\n        \r\n        console.log('Sending initWorkspaceFolders message:', { folders: workspaceFolders, currentFolder: activeFolder });\r\n        \r\n        // Enviar datos al frontend con un pequeño delay para asegurar que el webview esté listo\r\n        setTimeout(() => {\r\n            this._panel.webview.postMessage({\r\n                command: 'initWorkspaceFolders',\r\n                folders: workspaceFolders,\r\n                currentFolder: activeFolder || null\r\n            });\r\n        }, 100);\r\n    }\r\n}\r\n","/**\r\n * Traducciones embebidas para el entorno web\r\n * Autor: trystan4861\r\n */\r\n\r\nexport const translations = {\r\n  en: {\r\n    \"extension\": {\r\n      \"statusBar\": \"i18n editor\",\r\n      \"title\": \"ei18n-json-editor\",\r\n      \"openEditor\": \"Open Editor\",\r\n      \"openingEditor\": \"Opening Editor...\"\r\n    },\r\n    \"ui\": {\r\n      \"buttons\": {\r\n        \"translate\": \"Translate\",\r\n        \"remove\": \"Remove\",\r\n        \"reload\": \"Reload\",\r\n        \"columnSelector\": \"Languages\",\r\n        \"apply\": \"Apply\"\r\n      },\r\n      \"errors\": {\r\n        \"invalidKey\": \"The key is invalid.\",\r\n        \"keyNotEmpty\": \"The Key must be filled.\",\r\n        \"duplicatePath\": \"Key path conflict: '{0}' already exists as a simple key. To create '{1}', you must first delete or rename the existing '{0}' key.\",\r\n        \"emptyTranslation\": \"Translations cannot be empty when allowEmptyTranslations is set to false.\"\r\n      },\r\n      \"prompts\": {\r\n        \"enterLanguageCode\": \"Enter language code (max 5 characters)\",\r\n        \"languageCodePlaceholder\": \"e.g. es_ES or de\"\r\n      },\r\n      \"labels\": {\r\n        \"search\": \"Search...\",\r\n        \"loading\": \"Loading...\",\r\n        \"key\": \"Key\",\r\n        \"directory\": \"Directory\",\r\n        \"translation\": \"Translation...\",\r\n        \"of\": \"of\",\r\n        \"folder\": \"FOLDER\",\r\n        \"keyColumn\": \"KEY\",\r\n        \"toggle_search\": \"Toggle search\",\r\n        \"save\": \"Save\",\r\n        \"add_translation\": \"Add translation\",\r\n        \"reload\": \"Reload\",\r\n        \"add_language\": \"Add language\",\r\n        \"toggle_column_selector\": \"Toggle column selector\",\r\n        \"chage_view_mode\": \"Change view mode\",\r\n        \"error_translations\": \"There are some translation errors\"\r\n      },\r\n      \"pagination\": {\r\n        \"itemsPerPage\": \"Items per page\"\r\n      },\r\n      \"messages\": {\r\n        \"saved\": \"i18n files saved\",\r\n        \"reloaded\": \"i18n editor reloaded\",\r\n        \"cannotSaveInvalidTranslations\": \"Cannot save: There are invalid translations. Please fix all errors before saving.\",\r\n        \"saveError\": \"Error while saving files\",\r\n        \"languageCodeEmpty\": \"Language code cannot be empty\",\r\n        \"languageCodeTooLong\": \"Language code must be maximum 5 characters\",\r\n        \"languageCodeInvalid\": \"Language code must be maximum 5 characters!\",\r\n        \"noTargetFolder\": \"No target folder available to create language file\",\r\n        \"languageFileExists\": \"Language file {0} already exists\",\r\n        \"createdWithTemplate\": \"Created {0} using English template\",\r\n        \"templateReadError\": \"Could not read English template. Creating empty file.\",\r\n        \"templateNotFound\": \"English template not found. Creating empty file.\",\r\n        \"languageFileCreated\": \"New language file {0} created\",\r\n        \"fileCreationError\": \"Error creating language file: {0}\",\r\n        \"unsupportedFolder\": \"The folder '{0}' is not supported. Please configure supported folders in settings.\",\r\n        \"noEmptyTranslations\": \"No empty translations found.\"\r\n      },\r\n      \"placeholders\": {\r\n        \"key\": \"Key...\",\r\n        \"translation\": \"Translation...\"\r\n      }\r\n    }\r\n  },\r\n  es: {\r\n    \"extension\": {\r\n      \"statusBar\": \"Editor i18n\",\r\n      \"title\": \"Editor de JSON i18n\",\r\n      \"openEditor\": \"Abrir Editor\",\r\n      \"openingEditor\": \"Abriendo Editor...\"\r\n    },\r\n    \"ui\": {\r\n      \"buttons\": {\r\n        \"translate\": \"Traducir\",\r\n        \"remove\": \"Eliminar\",\r\n        \"reload\": \"Recargar\",\r\n        \"columnSelector\": \"Idiomas\",\r\n        \"apply\": \"Aplicar\"\r\n      },\r\n      \"errors\": {\r\n        \"invalidKey\": \"La clave no es válida.\",\r\n        \"keyNotEmpty\": \"La clave debe completarse.\",\r\n        \"duplicatePath\": \"Conflicto de ruta de clave: '{0}' ya existe como clave simple. Para crear '{1}', primero debe eliminar o renombrar la clave existente '{0}'.\",\r\n        \"emptyTranslation\": \"Las traducciones no pueden estar vacías cuando allowEmptyTranslations está configurado como false.\"\r\n      },\r\n      \"prompts\": {\r\n        \"enterLanguageCode\": \"Ingrese el código de idioma (máx. 5 caracteres)\",\r\n        \"languageCodePlaceholder\": \"ej. es_ES o de\"\r\n      },\r\n      \"labels\": {\r\n        \"search\": \"Buscar...\",\r\n        \"loading\": \"Cargando...\",\r\n        \"key\": \"Clave\",\r\n        \"directory\": \"Directorio\",\r\n        \"translation\": \"Traducción...\",\r\n        \"of\": \"de\",\r\n        \"folder\": \"CARPETA\",\r\n        \"keyColumn\": \"CLAVE\",\r\n        \"toggle_search\": \"Mostrar/ocultar búsqueda\",\r\n        \"save\": \"Guardar\",\r\n        \"add_translation\": \"Agregar traducción\",\r\n        \"reload\": \"Recargar\",\r\n        \"add_language\": \"Agregar idioma\",\r\n        \"toggle_column_selector\": \"Mostrar/ocultar selector de columnas\",\r\n        \"chage_view_mode\": \"Cambiar modo de vista\",\r\n        \"error_translations\": \"Hay algunos errores de traducción\"\r\n      },\r\n      \"pagination\": {\r\n        \"itemsPerPage\": \"Elementos por página\"\r\n      },\r\n      \"messages\": {\r\n        \"saved\": \"Archivos i18n guardados\",\r\n        \"reloaded\": \"Editor i18n recargado\",\r\n        \"cannotSaveInvalidTranslations\": \"No se puede guardar: Hay traducciones inválidas.\",\r\n        \"saveError\": \"Error al guardar los archivos\",\r\n        \"languageCodeEmpty\": \"El código de idioma no puede estar vacío\",\r\n        \"languageCodeTooLong\": \"El código de idioma debe tener máximo 5 caracteres\",\r\n        \"languageCodeInvalid\": \"¡El código de idioma debe tener máximo 5 caracteres!\",\r\n        \"noTargetFolder\": \"No hay carpeta disponible para crear el archivo de idioma\",\r\n        \"languageFileExists\": \"El archivo de idioma {0} ya existe\",\r\n        \"createdWithTemplate\": \"Se creó {0} usando la plantilla en inglés\",\r\n        \"templateReadError\": \"No se pudo leer la plantilla en inglés. Creando archivo vacío.\",\r\n        \"templateNotFound\": \"Plantilla en inglés no encontrada. Creando archivo vacío.\",\r\n        \"languageFileCreated\": \"Nuevo archivo de idioma {0} creado\",\r\n        \"fileCreationError\": \"Error al crear el archivo de idioma: {0}\",\r\n        \"unsupportedFolder\": \"La carpeta '{0}' no está soportada. Por favor configure las carpetas soportadas en la configuración.\",\r\n        \"noEmptyTranslations\": \"No se encontraron traducciones vacías.\"\r\n      },\r\n      \"placeholders\": {\r\n        \"key\": \"Clave...\",\r\n        \"translation\": \"Traducción...\"\r\n      }\r\n    }\r\n  }\r\n};","import * as vscode from 'vscode';\r\nimport * as _path from 'path';\r\n\r\nimport { EIJEFolder } from './models/eije-folder';\r\nimport { TranslationServiceEnum } from './services/eije-translation-service';\r\nimport { EIJEFileSystem } from './services/eije-filesystem';\r\n\r\nexport class EIJEConfiguration {\r\n    // Cache para configuración en memoria\r\n    private static _configCache: { [key: string]: any } = {};\r\n    \r\n    // Cache para detección de entorno web\r\n    private static _isWebEnvironmentCache: boolean | null = null;\r\n    \r\n    // Control para evitar creación repetitiva de archivo de configuración\r\n    private static _configFileCreated: boolean = false;\r\n    \r\n    // Limpiar caché de configuración (solo para configuraciones específicas)\r\n    static clearConfigCache(specificKey?: string): void {\r\n        if (specificKey) {\r\n            delete this._configCache[`config_${specificKey}`];\r\n        } else {\r\n            this._configCache = {};\r\n        }\r\n        // NO limpiar el caché de detección de entorno web para evitar re-detección\r\n        // NO resetear _configFileCreated para evitar recreación\r\n    }\r\n    \r\n    // Ruta del archivo de configuración dentro de .vscode\r\n    private static getConfigPath(workspaceFolder: vscode.WorkspaceFolder): string {\r\n        try {\r\n            // Asegurar que el directorio .vscode existe\r\n            const vscodePath = _path.join(workspaceFolder.uri.fsPath, '.vscode');\r\n            if (!EIJEFileSystem.existsSync(vscodePath)) {\r\n                EIJEFileSystem.mkdirSync(vscodePath, { recursive: true });\r\n            }\r\n            \r\n            const configPath = _path.join(vscodePath, '.ei18n-editor-config.json');\r\n            \r\n            // Si el archivo no existe, crearlo con configuración por defecto SOLO UNA VEZ\r\n            if (!EIJEFileSystem.existsSync(configPath) && !this._configFileCreated) {\r\n                this.createDefaultConfigFile(configPath);\r\n                this._configFileCreated = true;\r\n            }\r\n            \r\n            return configPath;\r\n        } catch (error) {\r\n            console.error('Error getting config path:', error);\r\n            return '';\r\n        }\r\n    }\r\n    \r\n    private static createDefaultConfigFile(configPath: string): void {\r\n        try {\r\n            const defaultConfig = {\r\n                allowEmptyTranslations: false,\r\n                defaultLanguage: \"en\",\r\n                forceKeyUPPERCASE: true,\r\n                jsonSpace: 2,\r\n                keySeparator: \".\",\r\n                lineEnding: \"\\n\",\r\n                supportedFolders: [\"i18n\"],\r\n                workspaceFolders: [],\r\n                defaultWorkspaceFolder: \"\",\r\n                translationService: \"Coming soon\",\r\n                translationServiceApiKey: \"Coming soon\",\r\n                visibleColumns: [],\r\n                hiddenColumns: []\r\n            };\r\n            \r\n            EIJEFileSystem.writeFileSync(configPath, JSON.stringify(defaultConfig, null, 2));\r\n        } catch (error) {\r\n            console.error('Error creating default config file:', error);\r\n        }\r\n    }\r\n\r\n    // Versión asíncrona para entorno web\r\n    private static async getConfigPathAsync(workspaceFolder: vscode.WorkspaceFolder): Promise<string> {\r\n        const vscodePath = _path.join(workspaceFolder.uri.fsPath, '.vscode');\r\n        if (!(await EIJEFileSystem.exists(vscodePath))) {\r\n            await EIJEFileSystem.mkdir(vscodePath);\r\n        }\r\n        return _path.join(vscodePath, '.ei18n-editor-config.json');\r\n    }\r\n\r\n    private static isWebEnvironment(): boolean {\r\n        // Usar caché si ya se calculó\r\n        if (this._isWebEnvironmentCache !== null) {\r\n            return this._isWebEnvironmentCache;\r\n        }\r\n\r\n        // Usar la misma lógica que EIJEFileSystem para consistencia\r\n        try {\r\n            // Método 1: Verificar si process existe y tiene node\r\n            const noNodeProcess = typeof process === 'undefined' || process.versions?.node === undefined;\r\n            \r\n            // Método 2: Verificar UIKind de VS Code\r\n            const isVSCodeWeb = typeof vscode !== 'undefined' && vscode.env?.uiKind === vscode.UIKind.Web;\r\n            \r\n            // Método 3: Verificar si estamos en un dominio web conocido\r\n            const isWebDomain = typeof globalThis !== 'undefined' && \r\n                typeof globalThis.location !== 'undefined' &&\r\n                (globalThis.location.hostname?.includes('github.dev') || \r\n                 globalThis.location.hostname?.includes('vscode.dev'));\r\n            \r\n            const isWeb = noNodeProcess || isVSCodeWeb || isWebDomain;\r\n            \r\n            // Solo mostrar debug la primera vez\r\n            if (this._isWebEnvironmentCache === null) {\r\n                console.log('DEBUG Web Environment Detection:', {\r\n                    uiKind: vscode.env.uiKind,\r\n                    isVSCodeWeb,\r\n                    workspaceScheme: vscode.workspace.workspaceFolders?.[0]?.uri.scheme,\r\n                    hostname: globalThis.location?.hostname,\r\n                    isWebDomain,\r\n                    hasNodeProcess: typeof process !== 'undefined' && !!process.versions?.node,\r\n                    noNodeProcess,\r\n                    finalResult: isWeb\r\n                });\r\n            }\r\n            \r\n            // Guardar en caché\r\n            this._isWebEnvironmentCache = isWeb;\r\n            return isWeb;\r\n        } catch (error) {\r\n            console.log('DEBUG Web Environment Detection Error:', error);\r\n            // En caso de error, asumir entorno web por seguridad\r\n            this._isWebEnvironmentCache = true;\r\n            return true;\r\n        }\r\n    }\r\n    // Lista de códigos de idioma RTL (Right-to-Left)\r\n    public static readonly RTL_LANGUAGES = [\r\n        'ar', // Árabe\r\n        'dv', // Divehi\r\n        'fa', // Persa (Farsi)\r\n        'he', // Hebreo\r\n        'ks', // Cachemir\r\n        'ku', // Kurdo\r\n        'ps', // Pashto\r\n        'sd', // Sindhi\r\n        'ug', // Uigur\r\n        'ur', // Urdu\r\n        'yi'  // Yiddish\r\n    ];\r\n    \r\n    /**\r\n     * Verifica si un idioma es RTL (Right-to-Left)\r\n     * @param language Código de idioma (ej. 'ar', 'he')\r\n     * @returns true si el idioma es RTL, false en caso contrario\r\n     */\r\n    static isRTL(language: string): boolean {\r\n        // Extraer código base del idioma (ej. 'ar-EG' -> 'ar')\r\n        const baseLanguage = language.split('-')[0].toLowerCase();\r\n        return this.RTL_LANGUAGES.includes(baseLanguage);\r\n    }\r\n\r\n    // Obtener una configuración específica del archivo local o global\r\n    private static getConfigValue<T>(configName: string, globalSettingName: string, defaultValue: T): T {\r\n        const cacheKey = `config_${configName}`;\r\n        \r\n        // Verificar caché primero\r\n        if (this._configCache[cacheKey] !== undefined) {\r\n            return this._configCache[cacheKey];\r\n        }\r\n        \r\n        let value: T = defaultValue;\r\n        \r\n        const isWeb = this.isWebEnvironment();\r\n        \r\n        if (isWeb) {\r\n            // En entorno web, intentar leer archivo local usando métodos asíncronos\r\n            // pero como este método es síncrono, usar configuración global como fallback\r\n            const globalValue = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n            value = globalValue !== undefined ? globalValue : defaultValue;\r\n            \r\n            // Intentar cargar configuración local de forma asíncrona en background\r\n            this.loadConfigFromFileAsync(configName).then(fileValue => {\r\n                if (fileValue !== undefined) {\r\n                    this._configCache[cacheKey] = fileValue;\r\n                }\r\n            }).catch(() => {\r\n                // Ignorar errores silenciosamente\r\n            });\r\n        } else {\r\n            try {\r\n                // Primero intentar leer del archivo de configuración local\r\n                const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n                if (workspaceFolder) {\r\n                    const configPath = this.getConfigPath(workspaceFolder);\r\n                    \r\n                    if (configPath && EIJEFileSystem.existsSync(configPath)) {\r\n                        const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                        if (configContent) {\r\n                            const config = JSON.parse(configContent);\r\n                            \r\n                            if (config[configName] !== undefined) {\r\n                                value = config[configName] as T;\r\n                            } else {\r\n                                // Si no está en el archivo local, usar configuración global\r\n                                const globalValue = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n                                value = globalValue !== undefined ? globalValue : defaultValue;\r\n                            }\r\n                        } else {\r\n                            // Si el archivo está vacío, usar configuración global\r\n                            const globalValue = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n                            value = globalValue !== undefined ? globalValue : defaultValue;\r\n                        }\r\n                    } else {\r\n                        // Si no hay archivo local, usar configuración global\r\n                        const globalValue = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n                        value = globalValue !== undefined ? globalValue : defaultValue;\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                console.error(`Error loading ${configName} from config file:`, e);\r\n                // En caso de error, usar configuración global\r\n                const globalValue = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n                value = globalValue !== undefined ? globalValue : defaultValue;\r\n            }\r\n        }\r\n        \r\n        // Guardar en caché\r\n        this._configCache[cacheKey] = value;\r\n        return value;\r\n    }\r\n\r\n    // Método auxiliar para cargar configuración de archivo de forma asíncrona\r\n    private static async loadConfigFromFileAsync<T>(configName: string): Promise<T | undefined> {\r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = await this.getConfigPathAsync(workspaceFolder);\r\n                if (await EIJEFileSystem.exists(configPath)) {\r\n                    const configContent = await EIJEFileSystem.readFile(configPath);\r\n                    if (configContent) {\r\n                        const config = JSON.parse(configContent);\r\n                        return config[configName] as T;\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(`Error loading ${configName} from config file async:`, e);\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    // Versión asíncrona para entorno web\r\n    private static async getConfigValueAsync<T>(configName: string, globalSettingName: string, defaultValue: T): Promise<T> {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, solo usar configuración global\r\n            const value = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n            return value !== undefined ? value : defaultValue;\r\n        }\r\n\r\n        try {\r\n            // Primero intentar leer del archivo de configuración local\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = await this.getConfigPathAsync(workspaceFolder);\r\n                if (await EIJEFileSystem.exists(configPath)) {\r\n                    const configContent = await EIJEFileSystem.readFile(configPath);\r\n                    const config = JSON.parse(configContent);\r\n                    if (config[configName] !== undefined) {\r\n                        return config[configName] as T;\r\n                    }\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error(`Error loading ${configName} from config file:`, e);\r\n        }\r\n        \r\n        // Si no se encuentra en el archivo local, usar la configuración global\r\n        const value = vscode.workspace.getConfiguration().get<T>(globalSettingName);\r\n        return value !== undefined ? value : defaultValue;\r\n    }\r\n\r\n    static get FORCE_KEY_UPPERCASE(): boolean {\r\n        return this.getConfigValue<boolean>('forceKeyUPPERCASE', 'i18nJsonEditor.forceKeyUPPERCASE', true);\r\n    }\r\n\r\n    static get JSON_SPACE(): string | number {\r\n        return this.getConfigValue<string | number>('jsonSpace', 'i18nJsonEditor.jsonSpace', 2);\r\n    }\r\n\r\n    static get KEY_SEPARATOR(): string | false {\r\n        const value = this.getConfigValue<string | boolean>('keySeparator', 'i18nJsonEditor.keySeparator', '.');\r\n        return value !== undefined && value !== true ? value : '.';\r\n    }\r\n\r\n    static get LINE_ENDING(): string {\r\n        return this.getConfigValue<string>('lineEnding', 'i18nJsonEditor.lineEnding', '\\n');\r\n    }\r\n\r\n    static get SUPPORTED_FOLDERS(): string[] {\r\n        return this.getConfigValue<string[]>('supportedFolders', 'i18nJsonEditor.supportedFolders', ['i18n']);\r\n    }\r\n    \r\n    static get TRANSLATION_SERVICE(): TranslationServiceEnum {\r\n        return this.getConfigValue<TranslationServiceEnum>('translationService', 'i18nJsonEditor.translationService', 'Coming soon' as any);\r\n    }\r\n\r\n    static get TRANSLATION_SERVICE_API_KEY(): string {\r\n        return this.getConfigValue<string>('translationServiceApiKey', 'i18nJsonEditor.translationServiceApiKey', 'Coming soon');\r\n    }\r\n    \r\n    static get ALLOW_EMPTY_TRANSLATIONS(): boolean {\r\n        return this.getConfigValue<boolean>('allowEmptyTranslations', 'i18nJsonEditor.allowEmptyTranslations', false);\r\n    }\r\n\r\n    static get DEFAULT_LANGUAGE(): string {\r\n        return this.getConfigValue<string>('defaultLanguage', 'i18nJsonEditor.defaultLanguage', 'en');\r\n    }\r\n\r\n    static get VISIBLE_COLUMNS(): string[] {\r\n        // Obtener la carpeta de trabajo actual\r\n        const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n        \r\n        // Si hay una carpeta de trabajo actual, intentar obtener las columnas visibles específicas para esa carpeta\r\n        if (currentWorkspaceFolder) {\r\n            // Obtener la configuración de workspaceFolders\r\n            const workspaceFolders = this.getConfigValue<any[]>('workspaceFolders', 'i18nJsonEditor.workspaceFolders', []);\r\n            \r\n            // Buscar la carpeta actual en la configuración\r\n            const folderConfig = workspaceFolders.find(f => f.name === currentWorkspaceFolder);\r\n            \r\n            // Si se encontró la carpeta y tiene configuración de columnas visibles, usarla\r\n            if (folderConfig && folderConfig.visibleColumns) {\r\n                return folderConfig.visibleColumns;\r\n            }\r\n            \r\n            // Si no se encontró configuración específica, usar un array vacío\r\n            return [];\r\n        } else {\r\n            // Si no hay carpeta de trabajo actual, usar la configuración global\r\n            const result = this.getConfigValue<string[]>('visibleColumns', 'i18nJsonEditor.visibleColumns', []);\r\n            return result;\r\n        }\r\n    }\r\n    \r\n    static get HIDDEN_COLUMNS(): string[] {\r\n        // Obtener la carpeta de trabajo actual\r\n        const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n        \r\n        // Si hay una carpeta de trabajo actual, intentar obtener las columnas ocultas específicas para esa carpeta\r\n        if (currentWorkspaceFolder) {\r\n            // Obtener la configuración de workspaceFolders\r\n            const workspaceFolders = this.getConfigValue<any[]>('workspaceFolders', 'i18nJsonEditor.workspaceFolders', []);\r\n            \r\n            // Buscar la carpeta actual en la configuración\r\n            const folderConfig = workspaceFolders.find(f => f.name === currentWorkspaceFolder);\r\n            \r\n            // Si se encontró la carpeta y tiene configuración de columnas ocultas, usarla\r\n            if (folderConfig && folderConfig.hiddenColumns) {\r\n                return folderConfig.hiddenColumns;\r\n            }\r\n            \r\n            // Si no se encontró configuración específica, usar un array vacío\r\n            return [];\r\n        } else {\r\n            // Si no hay carpeta de trabajo actual, usar la configuración global\r\n            const result = this.getConfigValue<string[]>('hiddenColumns', 'i18nJsonEditor.hiddenColumns', []);\r\n            return result;\r\n        }\r\n    }\r\n    \r\n    // Guarda toda la configuración en el archivo local\r\n    static saveFullConfiguration(): void {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, intentar guardar en archivo local usando métodos asíncronos\r\n            this.saveFullConfigurationAsync().catch(() => {\r\n                // Si falla, usar configuración global como fallback\r\n                const config = vscode.workspace.getConfiguration();\r\n                \r\n                Promise.all([\r\n                    config.update('i18nJsonEditor.forceKeyUPPERCASE', this.FORCE_KEY_UPPERCASE, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.jsonSpace', this.JSON_SPACE, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.keySeparator', this.KEY_SEPARATOR, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.lineEnding', this.LINE_ENDING, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.supportedFolders', this.SUPPORTED_FOLDERS, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.translationService', this.TRANSLATION_SERVICE, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.translationServiceApiKey', this.TRANSLATION_SERVICE_API_KEY, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.allowEmptyTranslations', this.ALLOW_EMPTY_TRANSLATIONS, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.defaultLanguage', this.DEFAULT_LANGUAGE, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.visibleColumns', this.VISIBLE_COLUMNS, vscode.ConfigurationTarget.Global),\r\n                    config.update('i18nJsonEditor.hiddenColumns', this.HIDDEN_COLUMNS, vscode.ConfigurationTarget.Global)\r\n                ]).catch(error => {\r\n                    console.error('Error saving web configuration:', error);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = this.getConfigPath(workspaceFolder);\r\n                let config: any = {};\r\n                \r\n                // Load existing config if it exists\r\n                if (EIJEFileSystem.existsSync(configPath)) {\r\n                    const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                    config = JSON.parse(configContent);\r\n                }\r\n                \r\n                // Update all configuration values\r\n                config.forceKeyUPPERCASE = this.FORCE_KEY_UPPERCASE;\r\n                config.jsonSpace = this.JSON_SPACE;\r\n                config.keySeparator = this.KEY_SEPARATOR;\r\n                config.lineEnding = this.LINE_ENDING;\r\n                config.supportedFolders = this.SUPPORTED_FOLDERS;\r\n                config.translationService = this.TRANSLATION_SERVICE;\r\n                config.translationServiceApiKey = this.TRANSLATION_SERVICE_API_KEY;\r\n                config.allowEmptyTranslations = this.ALLOW_EMPTY_TRANSLATIONS;\r\n                config.defaultLanguage = this.DEFAULT_LANGUAGE;\r\n                config.defaultWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n                \r\n                // Asegurarse de que workspaceFolders existe\r\n                config.workspaceFolders = config.workspaceFolders || [];\r\n                \r\n                // Si hay carpetas de trabajo configuradas, eliminar las configuraciones globales\r\n                if (config.workspaceFolders.length > 0) {\r\n                    // Eliminar las configuraciones globales si hay carpetas de trabajo\r\n                    delete config.visibleColumns;\r\n                    delete config.hiddenColumns;\r\n                    \r\n                    // Eliminar también las configuraciones específicas por carpeta en el nivel raíz\r\n                    Object.keys(config).forEach(key => {\r\n                        if (key.startsWith('visibleColumns_') || key.startsWith('hiddenColumns_')) {\r\n                            delete config[key];\r\n                        }\r\n                    });\r\n                    \r\n                    // Obtener la carpeta de trabajo actual\r\n                    const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n                    \r\n                    // Guardar configuraciones específicas por carpeta si hay una carpeta seleccionada\r\n                    if (currentWorkspaceFolder) {\r\n                        // Buscar la carpeta actual en la configuración\r\n                        const folderIndex = config.workspaceFolders.findIndex((f: any) => f.name === currentWorkspaceFolder);\r\n                        \r\n                        if (folderIndex >= 0) {\r\n                            // Si se encontró la carpeta, actualizar su configuración\r\n                            config.workspaceFolders[folderIndex].visibleColumns = this.VISIBLE_COLUMNS;\r\n                            config.workspaceFolders[folderIndex].hiddenColumns = this.HIDDEN_COLUMNS;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Si no hay carpetas de trabajo configuradas, usar configuración global\r\n                    config.visibleColumns = this.VISIBLE_COLUMNS;\r\n                    config.hiddenColumns = this.HIDDEN_COLUMNS;\r\n                }\r\n                \r\n                // Save config\r\n                EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n            }\r\n        } catch (e) {\r\n            console.error('Error saving configuration:', e);\r\n        }\r\n    }\r\n\r\n    // Versión asíncrona para entorno web\r\n    static async saveFullConfigurationAsync(): Promise<void> {\r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = await this.getConfigPathAsync(workspaceFolder);\r\n                let config: any = {};\r\n                \r\n                // Load existing config if it exists\r\n                if (await EIJEFileSystem.exists(configPath)) {\r\n                    const configContent = await EIJEFileSystem.readFile(configPath);\r\n                    if (configContent) {\r\n                        config = JSON.parse(configContent);\r\n                    }\r\n                }\r\n                \r\n                // Update all configuration values\r\n                config.forceKeyUPPERCASE = this.FORCE_KEY_UPPERCASE;\r\n                config.jsonSpace = this.JSON_SPACE;\r\n                config.keySeparator = this.KEY_SEPARATOR;\r\n                config.lineEnding = this.LINE_ENDING;\r\n                config.supportedFolders = this.SUPPORTED_FOLDERS;\r\n                config.translationService = this.TRANSLATION_SERVICE;\r\n                config.translationServiceApiKey = this.TRANSLATION_SERVICE_API_KEY;\r\n                config.allowEmptyTranslations = this.ALLOW_EMPTY_TRANSLATIONS;\r\n                config.defaultLanguage = this.DEFAULT_LANGUAGE;\r\n                config.defaultWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n                \r\n                // Asegurarse de que workspaceFolders existe\r\n                config.workspaceFolders = config.workspaceFolders || [];\r\n                \r\n                // Si hay carpetas de trabajo configuradas, eliminar las configuraciones globales\r\n                if (config.workspaceFolders.length > 0) {\r\n                    // Eliminar las configuraciones globales si hay carpetas de trabajo\r\n                    delete config.visibleColumns;\r\n                    delete config.hiddenColumns;\r\n                    \r\n                    // Eliminar también las configuraciones específicas por carpeta en el nivel raíz\r\n                    Object.keys(config).forEach(key => {\r\n                        if (key.startsWith('visibleColumns_') || key.startsWith('hiddenColumns_')) {\r\n                            delete config[key];\r\n                        }\r\n                    });\r\n                    \r\n                    // Obtener la carpeta de trabajo actual\r\n                    const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n                    \r\n                    // Guardar configuraciones específicas por carpeta si hay una carpeta seleccionada\r\n                    if (currentWorkspaceFolder) {\r\n                        // Buscar la carpeta actual en la configuración\r\n                        const folderIndex = config.workspaceFolders.findIndex((f: any) => f.name === currentWorkspaceFolder);\r\n                        \r\n                        if (folderIndex >= 0) {\r\n                            // Si se encontró la carpeta, actualizar su configuración\r\n                            config.workspaceFolders[folderIndex].visibleColumns = this.VISIBLE_COLUMNS;\r\n                            config.workspaceFolders[folderIndex].hiddenColumns = this.HIDDEN_COLUMNS;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Si no hay carpetas de trabajo configuradas, usar configuración global\r\n                    config.visibleColumns = this.VISIBLE_COLUMNS;\r\n                    config.hiddenColumns = this.HIDDEN_COLUMNS;\r\n                }\r\n                \r\n                // Save config\r\n                await EIJEFileSystem.writeFile(configPath, JSON.stringify(config, null, 2));\r\n            }\r\n        } catch (e) {\r\n            console.error('Error saving configuration async:', e);\r\n            throw e; // Re-throw para que el catch en saveFullConfiguration funcione\r\n        }\r\n    }\r\n    \r\n    static async saveHiddenColumns(columns: string[]): Promise<void> {\r\n        // Obtener la carpeta de trabajo actual\r\n        const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n        \r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, usar configuración global de VS Code\r\n            if (currentWorkspaceFolder) {\r\n                // Si hay una carpeta de trabajo actual, actualizar la configuración de workspaceFolders\r\n                await this.updateWorkspaceFolderConfig(currentWorkspaceFolder, { hiddenColumns: columns });\r\n            } else {\r\n                // Si no hay carpeta de trabajo actual, actualizar la configuración global\r\n                const config = vscode.workspace.getConfiguration();\r\n                await config.update('i18nJsonEditor.hiddenColumns', columns, vscode.ConfigurationTarget.Global);\r\n                // También actualizar el caché inmediatamente\r\n                this._configCache['config_hiddenColumns'] = columns;\r\n            }\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = this.getConfigPath(workspaceFolder);\r\n                if (configPath) {\r\n                    let config: any = {};\r\n                    \r\n                    if (EIJEFileSystem.existsSync(configPath)) {\r\n                        const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                        config = JSON.parse(configContent);\r\n                    }\r\n                    \r\n                    if (currentWorkspaceFolder) {\r\n                        // Si hay una carpeta de trabajo actual, actualizar la configuración de workspaceFolders\r\n                        config.workspaceFolders = config.workspaceFolders || [];\r\n                        \r\n                        // Buscar la carpeta actual en la configuración\r\n                        const folderIndex = config.workspaceFolders.findIndex((f: any) => f.name === currentWorkspaceFolder);\r\n                        \r\n                        if (folderIndex >= 0) {\r\n                            // Si se encontró la carpeta, actualizar su configuración\r\n                            config.workspaceFolders[folderIndex].hiddenColumns = columns;\r\n                        }\r\n                        \r\n                        // Si hay carpetas de trabajo configuradas, eliminar la configuración global\r\n                        if (config.workspaceFolders.length > 0) {\r\n                            delete config.hiddenColumns;\r\n                        }\r\n                    } else {\r\n                        // Si no hay carpeta de trabajo actual, actualizar la configuración global\r\n                        config.hiddenColumns = columns;\r\n                    }\r\n                    \r\n                    EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Error saving hidden columns:', e);\r\n        }\r\n    }\r\n    \r\n    static async saveVisibleColumns(columns: string[]): Promise<void> {\r\n        // Obtener la carpeta de trabajo actual\r\n        const currentWorkspaceFolder = this.DEFAULT_WORKSPACE_FOLDER;\r\n        \r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, usar configuración global de VS Code\r\n            if (currentWorkspaceFolder) {\r\n                // Si hay una carpeta de trabajo actual, actualizar la configuración de workspaceFolders\r\n                await this.updateWorkspaceFolderConfig(currentWorkspaceFolder, { visibleColumns: columns });\r\n            } else {\r\n                // Si no hay carpeta de trabajo actual, actualizar la configuración global\r\n                const config = vscode.workspace.getConfiguration();\r\n                await config.update('i18nJsonEditor.visibleColumns', columns, vscode.ConfigurationTarget.Global);\r\n                // También actualizar el caché inmediatamente\r\n                this._configCache['config_visibleColumns'] = columns;\r\n            }\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = this.getConfigPath(workspaceFolder);\r\n                if (configPath) {\r\n                    let config: any = {};\r\n                    \r\n                    if (EIJEFileSystem.existsSync(configPath)) {\r\n                        const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                        config = JSON.parse(configContent);\r\n                    }\r\n                    \r\n                    if (currentWorkspaceFolder) {\r\n                        // Si hay una carpeta de trabajo actual, actualizar la configuración de workspaceFolders\r\n                        config.workspaceFolders = config.workspaceFolders || [];\r\n                        \r\n                        // Buscar la carpeta actual en la configuración\r\n                        const folderIndex = config.workspaceFolders.findIndex((f: any) => f.name === currentWorkspaceFolder);\r\n                        \r\n                        if (folderIndex >= 0) {\r\n                            // Si se encontró la carpeta, actualizar su configuración\r\n                            config.workspaceFolders[folderIndex].visibleColumns = columns;\r\n                        }\r\n                        \r\n                        // Si hay carpetas de trabajo configuradas, eliminar la configuración global\r\n                        if (config.workspaceFolders.length > 0) {\r\n                            delete config.visibleColumns;\r\n                        }\r\n                    } else {\r\n                        // Si no hay carpeta de trabajo actual, actualizar la configuración global\r\n                        config.visibleColumns = columns;\r\n                    }\r\n                    \r\n                    EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Error saving visible columns:', e);\r\n        }\r\n    }\r\n    \r\n    // Método auxiliar para actualizar la configuración de una carpeta de trabajo específica\r\n    private static async updateWorkspaceFolderConfig(folderName: string, configUpdate: any): Promise<void> {\r\n        try {\r\n            // Obtener la configuración actual\r\n            const config = vscode.workspace.getConfiguration();\r\n            const workspaceFolders = await config.get<any[]>('i18nJsonEditor.workspaceFolders') || [];\r\n            \r\n            // Buscar la carpeta en la configuración\r\n            const folderIndex = workspaceFolders.findIndex((f: any) => f.name === folderName);\r\n            \r\n            if (folderIndex >= 0) {\r\n                // Si se encontró la carpeta, actualizar su configuración\r\n                const updatedFolders = [...workspaceFolders];\r\n                updatedFolders[folderIndex] = {\r\n                    ...updatedFolders[folderIndex],\r\n                    ...configUpdate\r\n                };\r\n                \r\n                // Guardar la configuración actualizada\r\n                await config.update('i18nJsonEditor.workspaceFolders', updatedFolders, vscode.ConfigurationTarget.Global);\r\n                \r\n                // Actualizar el caché\r\n                this._configCache['config_workspaceFolders'] = updatedFolders;\r\n            }\r\n        } catch (e) {\r\n            console.error('Error updating workspace folder config:', e);\r\n        }\r\n    }\r\n\r\n    static async saveDefaultWorkspaceFolder(folderName: string): Promise<void> {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, usar configuración local de archivo\r\n            try {\r\n                const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n                if (workspaceFolder) {\r\n                    const configPath = await this.getConfigPathAsync(workspaceFolder);\r\n                    let config: any = {};\r\n                    \r\n                    if (await EIJEFileSystem.exists(configPath)) {\r\n                        const configContent = await EIJEFileSystem.readFile(configPath);\r\n                        if (configContent) {\r\n                            config = JSON.parse(configContent);\r\n                        }\r\n                    }\r\n                    \r\n                    config.defaultWorkspaceFolder = folderName;\r\n                    await EIJEFileSystem.writeFile(configPath, JSON.stringify(config, null, 2));\r\n                    \r\n                    // Actualizar el caché inmediatamente\r\n                    this._configCache['config_defaultWorkspaceFolder'] = folderName;\r\n                }\r\n            } catch (e) {\r\n                console.error('Error saving default workspace folder in web environment:', e);\r\n            }\r\n            return;\r\n        }\r\n        \r\n        try {\r\n            const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n            if (workspaceFolder) {\r\n                const configPath = this.getConfigPath(workspaceFolder);\r\n                if (configPath) {\r\n                    let config: any = {};\r\n                    \r\n                    if (EIJEFileSystem.existsSync(configPath)) {\r\n                        const configContent = EIJEFileSystem.readFileSync(configPath);\r\n                        config = JSON.parse(configContent);\r\n                    }\r\n                    \r\n                    config.defaultWorkspaceFolder = folderName;\r\n                    EIJEFileSystem.writeFileSync(configPath, JSON.stringify(config, null, 2));\r\n                    \r\n                    // Actualizar el caché inmediatamente\r\n                    this._configCache['config_defaultWorkspaceFolder'] = folderName;\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Error saving default workspace folder:', e);\r\n        }\r\n    }\r\n\r\n    static get DEFAULT_WORKSPACE_FOLDER(): string {\r\n        return this.getConfigValue<string>('defaultWorkspaceFolder', 'i18nJsonEditor.defaultWorkspaceFolder', '');\r\n    }\r\n\r\n    static get WORKSPACE_FOLDERS(): EIJEFolder[] {\r\n        const folders = this.getConfigValue<EIJEFolder[]>('workspaceFolders', 'i18nJsonEditor.workspaceFolders', []);\r\n        let workspaceFolder: vscode.WorkspaceFolder | undefined = vscode.workspace.workspaceFolders?.[0];\r\n\r\n        if (!workspaceFolder) {\r\n            return [];\r\n        }\r\n\r\n        const _folders: EIJEFolder[] = [];\r\n        folders?.forEach(d => {\r\n            var path = vscode.Uri.file(_path.join(workspaceFolder.uri.fsPath, d.path)).fsPath;\r\n            if (EIJEFileSystem.existsSync(path)) {\r\n                _folders.push({ name: d.name, path: path });\r\n            }\r\n        });\r\n\r\n        return _folders !== undefined ? _folders : [];\r\n    }\r\n\r\n    // Método para inicializar configuración de forma asíncrona en entorno web\r\n    static async initializeConfigurationAsync(): Promise<void> {\r\n        if (this.isWebEnvironment()) {\r\n            try {\r\n                // Intentar cargar configuración del archivo local\r\n                const workspaceFolder = vscode.workspace.workspaceFolders?.[0];\r\n                if (workspaceFolder) {\r\n                    const configPath = await this.getConfigPathAsync(workspaceFolder);\r\n                    \r\n                    // Crear directorio .vscode si no existe\r\n                    const vscodePath = _path.join(workspaceFolder.uri.fsPath, '.vscode');\r\n                    if (!(await EIJEFileSystem.exists(vscodePath))) {\r\n                        await EIJEFileSystem.mkdir(vscodePath);\r\n                    }\r\n                    \r\n                    // Si el archivo no existe, crearlo con configuración por defecto\r\n                    if (!(await EIJEFileSystem.exists(configPath))) {\r\n                        const defaultConfig = {\r\n                            allowEmptyTranslations: false,\r\n                            defaultLanguage: \"en\",\r\n                            forceKeyUPPERCASE: true,\r\n                            jsonSpace: 2,\r\n                            keySeparator: \".\",\r\n                            lineEnding: \"\\n\",\r\n                            supportedFolders: [\"i18n\"],\r\n                            workspaceFolders: [],\r\n                            defaultWorkspaceFolder: \"\",\r\n                            translationService: \"Coming soon\",\r\n                            translationServiceApiKey: \"Coming soon\",\r\n                            visibleColumns: [],\r\n                            hiddenColumns: []\r\n                        };\r\n                        \r\n                        await EIJEFileSystem.writeFile(configPath, JSON.stringify(defaultConfig, null, 2));\r\n                    }\r\n                    \r\n                    // Cargar configuración del archivo\r\n                    const configContent = await EIJEFileSystem.readFile(configPath);\r\n                    if (configContent) {\r\n                        const config = JSON.parse(configContent);\r\n                        \r\n                        // Actualizar caché con valores del archivo\r\n                        Object.keys(config).forEach(key => {\r\n                            this._configCache[`config_${key}`] = config[key];\r\n                        });\r\n                    }\r\n                }\r\n            } catch (error) {\r\n                console.error('Error initializing configuration async:', error);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as vscode from 'vscode';\r\nimport * as _path from 'path';\r\nimport { EIJEFileSystem } from '../services/eije-filesystem';\r\n\r\nimport { EIJEConfiguration } from '../eije-configuration';\r\nimport { EIJEManager } from '../eije-manager';\r\nimport { I18nService } from '../../i18n/i18n-service';\r\nimport { NotificationService } from '../services/notification-service';\r\n\r\nexport class EIJEEditorProvider {\r\n    // Referencia estática para rastrear el panel activo\r\n    private static currentPanel: vscode.WebviewPanel | undefined;\r\n    private static currentManager: EIJEManager | undefined;\r\n\r\n    private static isWebEnvironment(): boolean {\r\n        return typeof process === 'undefined' || process.versions?.node === undefined;\r\n    }\r\n\r\n    public static register(context: vscode.ExtensionContext): vscode.Disposable {\r\n        const i18n = I18nService.getInstance(context);\r\n        \r\n        // Función para verificar si una carpeta es soportada (síncrona)\r\n        const isSupportedFolder = (folderPath: string): boolean => {\r\n            if (!vscode.workspace.workspaceFolders) {\r\n                return false;\r\n            }\r\n            \r\n            for (const workspaceFolder of vscode.workspace.workspaceFolders) {\r\n                const rootPath = workspaceFolder.uri.fsPath;\r\n                \r\n                for (const supportedFolder of EIJEConfiguration.SUPPORTED_FOLDERS) {\r\n                    \r\n                    // Verificar por nombre de carpeta - usar lógica más robusta para entorno web\r\n                    let folderBaseName: string;\r\n                    let relativePath: string;\r\n                    \r\n                    if (this.isWebEnvironment()) {\r\n                        // En entorno web, manejar las rutas manualmente\r\n                        const normalizedFolderPath = folderPath.replace(/\\\\/g, '/');\r\n                        const normalizedRootPath = rootPath.replace(/\\\\/g, '/');\r\n                        \r\n                        // Extraer el nombre base de la carpeta\r\n                        const pathParts = normalizedFolderPath.split('/');\r\n                        folderBaseName = pathParts[pathParts.length - 1];\r\n                        \r\n                        // Calcular la ruta relativa\r\n                        if (normalizedFolderPath.startsWith(normalizedRootPath)) {\r\n                            relativePath = normalizedFolderPath.substring(normalizedRootPath.length + 1);\r\n                        } else {\r\n                            relativePath = normalizedFolderPath;\r\n                        }\r\n                    } else {\r\n                        // En entorno desktop, usar las funciones normales de path\r\n                        folderBaseName = _path.basename(folderPath);\r\n                        relativePath = _path.relative(rootPath, folderPath);\r\n                    }\r\n                    \r\n                    if (folderBaseName === supportedFolder) {\r\n                        return true;\r\n                    }\r\n                    \r\n                    // Si la ruta relativa es exactamente el nombre de la carpeta soportada\r\n                    if (relativePath === supportedFolder) {\r\n                        return true;\r\n                    }\r\n                    \r\n                    // Verificar por ruta relativa\r\n                    if (supportedFolder.includes('/') || supportedFolder.includes('\\\\')) {\r\n                        const cleanPath = supportedFolder.replace(/^\\.?[\\/\\\\]/, ''); // Remover ./ o / inicial\r\n                        const expectedPath = _path.join(rootPath, cleanPath);\r\n                        \r\n                        if (_path.resolve(folderPath) === _path.resolve(expectedPath)) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n\r\n        // Función asíncrona para verificar si una carpeta es soportada (para entorno web)\r\n        const isSupportedFolderAsync = async (folderPath: string): Promise<boolean> => {\r\n            if (!vscode.workspace.workspaceFolders) {\r\n                return false;\r\n            }\r\n            \r\n            for (const workspaceFolder of vscode.workspace.workspaceFolders) {\r\n                const rootPath = workspaceFolder.uri.fsPath;\r\n                console.log('DEBUG ASYNC: Workspace root path:', rootPath);\r\n                \r\n                for (const supportedFolder of EIJEConfiguration.SUPPORTED_FOLDERS) {\r\n                    console.log('DEBUG ASYNC: Checking supported folder:', supportedFolder);\r\n                    \r\n                    // Verificar por nombre de carpeta - usar lógica más robusta para entorno web\r\n                    let folderBaseName: string;\r\n                    let relativePath: string;\r\n                    \r\n                    if (this.isWebEnvironment()) {\r\n                        // En entorno web, manejar las rutas manualmente\r\n                        const normalizedFolderPath = folderPath.replace(/\\\\/g, '/');\r\n                        const normalizedRootPath = rootPath.replace(/\\\\/g, '/');\r\n                        \r\n                        // Extraer el nombre base de la carpeta\r\n                        const pathParts = normalizedFolderPath.split('/');\r\n                        folderBaseName = pathParts[pathParts.length - 1];\r\n                        \r\n                        // Calcular la ruta relativa\r\n                        if (normalizedFolderPath.startsWith(normalizedRootPath)) {\r\n                            relativePath = normalizedFolderPath.substring(normalizedRootPath.length + 1);\r\n                        } else {\r\n                            relativePath = normalizedFolderPath;\r\n                        }\r\n                    } else {\r\n                        // En entorno desktop, usar las funciones normales de path\r\n                        folderBaseName = _path.basename(folderPath);\r\n                        relativePath = _path.relative(rootPath, folderPath);\r\n                    }\r\n                    \r\n                    console.log('DEBUG ASYNC: Folder basename:', folderBaseName);\r\n                    console.log('DEBUG ASYNC: Relative path from workspace:', relativePath);\r\n                    \r\n                    if (folderBaseName === supportedFolder) {\r\n                        // Verificar que la carpeta realmente existe\r\n                        const exists = await EIJEFileSystem.exists(folderPath);\r\n                        console.log('DEBUG ASYNC: Folder exists:', exists);\r\n                        if (exists) {\r\n                            console.log('DEBUG ASYNC: Match found by basename!');\r\n                            return true;\r\n                        }\r\n                    }\r\n                    \r\n                    // Si la ruta relativa es exactamente el nombre de la carpeta soportada\r\n                    if (relativePath === supportedFolder) {\r\n                        const exists = await EIJEFileSystem.exists(folderPath);\r\n                        console.log('DEBUG ASYNC: Folder exists (relative):', exists);\r\n                        if (exists) {\r\n                            console.log('DEBUG ASYNC: Match found by relative path!');\r\n                            return true;\r\n                        }\r\n                    }\r\n                    \r\n                    // Verificar por ruta relativa\r\n                    if (supportedFolder.includes('/') || supportedFolder.includes('\\\\')) {\r\n                        const cleanPath = supportedFolder.replace(/^\\.?[\\/\\\\]/, ''); // Remover ./ o / inicial\r\n                        const expectedPath = _path.join(rootPath, cleanPath);\r\n                        console.log('DEBUG ASYNC: Expected path:', expectedPath);\r\n                        console.log('DEBUG ASYNC: Resolved folder path:', _path.resolve(folderPath));\r\n                        console.log('DEBUG ASYNC: Resolved expected path:', _path.resolve(expectedPath));\r\n                        \r\n                        if (_path.resolve(folderPath) === _path.resolve(expectedPath)) {\r\n                            // Verificar que la carpeta realmente existe\r\n                            const exists = await EIJEFileSystem.exists(folderPath);\r\n                            console.log('DEBUG ASYNC: Folder exists (full path):', exists);\r\n                            if (exists) {\r\n                                console.log('DEBUG ASYNC: Match found by full path!');\r\n                                return true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            console.log('DEBUG ASYNC: No match found');\r\n            return false;\r\n        };\r\n        \r\n        // Listener para cambios en la selección del explorador\r\n        const updateContextMenu = () => {\r\n            // Por defecto, mostrar el menú contextual para todas las carpetas\r\n            // La lógica de verificación se hará en el comando\r\n            vscode.commands.executeCommand('setContext', 'ext:showContextMenu', true);\r\n        };\r\n        \r\n        // Actualizar contexto inicialmente\r\n        updateContextMenu();\r\n        \r\n        // Listener para cambios en la configuración\r\n        const configListener = vscode.workspace.onDidChangeConfiguration(e => {\r\n            if (e.affectsConfiguration('i18nJsonEditor.supportedFolders')) {\r\n                updateContextMenu();\r\n            }\r\n        });\r\n        \r\n        context.subscriptions.push(configListener);\r\n\r\n        return vscode.commands.registerCommand('ei18n-json-editor', async (uri: vscode.Uri) => {\r\n            // Determinar la ruta de la carpeta\r\n            let folderPath = null;\r\n            \r\n            if (!uri && vscode.workspace.workspaceFolders && vscode.workspace.workspaceFolders.length > 0) {\r\n                const rootPath = vscode.workspace.workspaceFolders[0].uri.fsPath;\r\n                \r\n                // Buscar carpetas soportadas tanto por nombre como por ruta relativa\r\n                for (const supportedFolder of EIJEConfiguration.SUPPORTED_FOLDERS) {\r\n                    let testPath: string;\r\n                    \r\n                    if (supportedFolder.includes('/') || supportedFolder.includes('\\\\')) {\r\n                        // Es una ruta relativa (ej: \"src/i18n\", \"./src/i18n\", \"/src/i18n\")\r\n                        const cleanPath = supportedFolder.replace(/^\\.?[\\/\\\\]/, ''); // Remover ./ o / inicial\r\n                        testPath = _path.join(rootPath, cleanPath);\r\n                    } else {\r\n                        // Es solo un nombre de carpeta (ej: \"i18n\")\r\n                        testPath = _path.join(rootPath, supportedFolder);\r\n                    }\r\n                    \r\n                    // Usar método apropiado según el entorno\r\n                    const exists = this.isWebEnvironment() \r\n                        ? await EIJEFileSystem.exists(testPath)\r\n                        : EIJEFileSystem.existsSync(testPath);\r\n                    \r\n                    if (exists) {\r\n                        folderPath = testPath;\r\n                        break;\r\n                    }\r\n                }\r\n            } else if (uri) {\r\n                // Verificar si la carpeta seleccionada es soportada\r\n                const isSupported = this.isWebEnvironment()\r\n                    ? await isSupportedFolderAsync(uri.fsPath)\r\n                    : isSupportedFolder(uri.fsPath);\r\n                \r\n                if (isSupported) {\r\n                    folderPath = uri.fsPath;\r\n                } else {\r\n                    // Si no es una carpeta soportada, mostrar mensaje de error\r\n                    NotificationService.getInstance().showErrorMessage(\r\n                        i18n.t('ui.messages.unsupportedFolder', _path.basename(uri.fsPath))\r\n                    );\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Si ya existe un panel, enfocarlo en lugar de crear uno nuevo\r\n            if (EIJEEditorProvider.currentPanel) {\r\n                EIJEEditorProvider.currentPanel.reveal(vscode.ViewColumn.One);\r\n                // Opcionalmente, actualizar el contenido si la carpeta ha cambiado\r\n                if (folderPath && folderPath !== EIJEEditorProvider.currentManager?.getFolderPath()) {\r\n                    EIJEEditorProvider.currentManager?.updateFolderPath(folderPath);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // Si no existe, crear un nuevo panel\r\n            const panel = vscode.window.createWebviewPanel(\r\n                'ei18n-json-editor',\r\n                i18n.t('extension.title'),\r\n                vscode.ViewColumn.One,\r\n                {\r\n                    retainContextWhenHidden: true,\r\n                    enableScripts: true,\r\n                    localResourceRoots: [vscode.Uri.file(_path.join(context.extensionPath, 'media'))]\r\n                }\r\n            );\r\n\r\n            // Crear y guardar el manager\r\n            const manager = new EIJEManager(context, panel, folderPath);\r\n            EIJEEditorProvider.currentPanel = panel;\r\n            EIJEEditorProvider.currentManager = manager;\r\n\r\n            // Cuando el panel se cierra, borrar las referencias\r\n            panel.onDidDispose(() => {\r\n                EIJEEditorProvider.currentPanel = undefined;\r\n                EIJEEditorProvider.currentManager = undefined;\r\n            });\r\n        });\r\n    }\r\n\r\n    constructor(private readonly _context: vscode.ExtensionContext) {}\r\n}\r\n","module.exports = require(\"vscode\");","import { EIJEConfiguration } from '../eije-configuration';\r\nimport { EIJEDataTranslation } from '../models/eije-data-translation';\r\nimport { EIJEMicrosoftTranslator } from './translations/eije-microsoft-translator';\r\nimport { EIJETranlsation } from './translations/eije-translation';\r\n\r\nexport abstract class EIJETranslationService {\r\n    public static async translate(translation: EIJEDataTranslation, language: string, languages: string[]) {\r\n        const tranlsationService = EIJEConfiguration.TRANSLATION_SERVICE;\r\n\r\n        // Return early if translation service is not available yet\r\n        if (!tranlsationService || \r\n            !EIJEConfiguration.TRANSLATION_SERVICE_API_KEY || \r\n            tranlsationService === TranslationServiceEnum.ComingSoon ||\r\n            EIJEConfiguration.TRANSLATION_SERVICE_API_KEY === 'Coming soon') {\r\n            return;\r\n        }\r\n        \r\n        let service: EIJETranlsation;\r\n        if (EIJEConfiguration.TRANSLATION_SERVICE === TranslationServiceEnum.MicrosoftTranslator) {\r\n            service = new EIJEMicrosoftTranslator();\r\n        }\r\n        if (!service) {\r\n            return;\r\n        }\r\n        const data = await service.translate(translation.languages[language], language, languages);\r\n        languages\r\n            .filter(l => l !== language)\r\n            .forEach(l => {\r\n                if (data[l]) {\r\n                    translation.languages[l] = data[l];\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport enum TranslationServiceEnum {\r\n    MicrosoftTranslator = 'MicrosoftTranslator',\r\n    ComingSoon = 'Coming soon'\r\n}\r\n","/*! Axios v1.9.0 Copyright (c) 2025 Matt Zabriskie and contributors */\n'use strict';\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils$1.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv,\n  navigator: _navigator,\n  origin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isObject(header) && utils$1.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils$1.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils$1.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  };\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n};\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\n\nconst asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils$1.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders$1.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    };\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n    }, timeout);\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils$1.asap(unsubscribe);\n\n    return signal;\n  }\n};\n\nvar composeSignals$1 = composeSignals;\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n};\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils$1.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils$1.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils$1.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils$1.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils$1.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n};\n\nvar fetchAdapter = isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils$1.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders$1.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.9.0\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators$1.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) ; else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n","import * as vscode from 'vscode';\r\nimport * as _path from 'path';\r\nimport { EIJEFileSystem } from './services/eije-filesystem';\r\n\r\nimport { EIJEConfiguration } from './eije-configuration';\r\nimport { EIJEDataRenderService } from './services/eije-data-render-service';\r\nimport { EIJEDataTranslation } from './models/eije-data-translation';\r\nimport { EIJEDataTranslationError, getTranslatedError } from './models/eije-data-translation';\r\nimport { EIJETranslationService } from './services/eije-translation-service';\r\nimport { EIJEManager } from './eije-manager';\r\nimport { EIJEPage } from './models/eije-page';\r\nimport { EIJESort } from './models/eije-sort';\r\nimport { EIJEView, EIJEViewType } from './models/eije-view';\r\nimport { I18nService } from '../i18n/i18n-service';\r\nimport { NotificationService } from './services/notification-service';\r\n\r\nexport class EIJEData {\r\n    private _currentID = 1;\r\n\r\n    private _languages: string[] = [];\r\n    private _translations: EIJEDataTranslation[] = [];\r\n    private _unsavedChanges: boolean = false;\r\n\r\n    private _searchPattern: string = '';\r\n\r\n    private _view: EIJEView;\r\n    private _page: EIJEPage;\r\n    private _sort: EIJESort;\r\n    \r\n    // Método para verificar si hay cambios sin guardar\r\n    hasUnsavedChanges(): boolean {\r\n        return this._unsavedChanges;\r\n    }\r\n    \r\n    // Método para marcar que hay cambios sin guardar\r\n    markAsChanged(): void {\r\n        this._unsavedChanges = true;\r\n        // Notificar al frontend que hay cambios\r\n        this._manager.postMessage({\r\n            command: 'unsavedChanges',\r\n            hasUnsavedChanges: true\r\n        });\r\n    }\r\n    \r\n    // Método para marcar que no hay cambios sin guardar\r\n    markAsSaved(): void {\r\n        this._unsavedChanges = false;\r\n        // Notificar al frontend que no hay cambios\r\n        this._manager.postMessage({\r\n            command: 'unsavedChanges',\r\n            hasUnsavedChanges: false\r\n        });\r\n    }\r\n    \r\n    // Métodos para obtener datos necesarios para las funciones de traducciones vacías\r\n    getAllTranslations(): EIJEDataTranslation[] {\r\n        return this._translations;\r\n    }\r\n    \r\n    getLanguages(): string[] {\r\n        return this._languages;\r\n    }\r\n    \r\n    getPageSize(): number {\r\n        return this._page.pageSize;\r\n    }\r\n    \r\n    getCurrentPage(): number {\r\n        return this._page.pageNumber;\r\n    }\r\n\r\n    constructor(private _manager: EIJEManager) {\r\n        this._defaultValues();\r\n        // La carga de archivos ahora debe ser llamada explícitamente de forma asíncrona\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        // Limpiar datos existentes\r\n        this._translations = [];\r\n        this._languages = [];\r\n        \r\n        // Solo cargar archivos si hay una carpeta seleccionada\r\n        if (this._manager.folderPath) {\r\n            await this._loadFiles();\r\n        }\r\n    }\r\n\r\n    private _defaultValues() {\r\n        this._view = {\r\n            type: EIJEViewType.TABLE,\r\n            selectionId: 1\r\n        };\r\n\r\n        this._sort = {\r\n            column: I18nService.getInstance().t('ui.labels.keyColumn'),\r\n            ascending: true\r\n        };\r\n\r\n        this._page = {\r\n            pageSize: 10,\r\n            pageNumber: 1\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Actions from the view\r\n     */\r\n    add() {\r\n        const translation = this._createFactoryIJEDataTranslation();\r\n        \r\n        // Marcar explícitamente como inválido y mostrar el mensaje de error\r\n        translation.valid = false;\r\n        translation.error = getTranslatedError(EIJEDataTranslationError.KEY_NOT_EMPTY);\r\n        \r\n        this._insert(translation);\r\n        this._view.selectionId = translation.id;\r\n        this._manager.refreshDataTable();\r\n        \r\n        // Marcar que hay cambios sin guardar\r\n        this.markAsChanged();\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    mark(id: number) {\r\n        const translation = this._get(id);\r\n        if (translation) {\r\n            this._view.selectionId = id;\r\n        }\r\n    }\r\n\r\n    navigate(page: number, skipRefresh: boolean = false) {\r\n        this._page.pageNumber = page;\r\n        if (!skipRefresh) {\r\n            this._manager.refreshDataTable();\r\n        }\r\n    }\r\n\r\n    pageSize(pageSize: number) {\r\n        if (pageSize > 0 && pageSize % 10 === 0) {\r\n            this._page.pageSize = pageSize;\r\n            this._manager.refreshDataTable();\r\n        }\r\n    }\r\n\r\n    private _hasTranslationService(): boolean {\r\n        return !!EIJEConfiguration.TRANSLATION_SERVICE && \r\n               !!EIJEConfiguration.TRANSLATION_SERVICE_API_KEY &&\r\n               EIJEConfiguration.TRANSLATION_SERVICE !== 'Coming soon' &&\r\n               EIJEConfiguration.TRANSLATION_SERVICE_API_KEY !== 'Coming soon';\r\n    }\r\n\r\n    render() {\r\n        let render = '';\r\n        let translations = this._getDisplayedTranslations();\r\n        const hasTranslateService = this._hasTranslationService();\r\n\r\n        switch (this._view.type) {\r\n            case EIJEViewType.LIST:\r\n                render += EIJEDataRenderService.renderList(\r\n                    translations,\r\n                    this._get(this._view.selectionId),\r\n                    this._languages,\r\n                    this._page,\r\n                    this._sort,\r\n                    false, // No mostrar columna de carpeta ya que trabajamos con carpeta específica\r\n                    hasTranslateService\r\n                );\r\n                break;\r\n            case EIJEViewType.TABLE:\r\n                render += EIJEDataRenderService.renderTable(\r\n                    translations,\r\n                    this._languages,\r\n                    this._page,\r\n                    this._sort,\r\n                    false, // No mostrar columna de carpeta ya que trabajamos con carpeta específica\r\n                    hasTranslateService\r\n                );\r\n                break;\r\n        }\r\n\r\n        return render;\r\n    }\r\n\r\n    remove(id: number) {\r\n        const index = this._getIndex(id);\r\n        if (index > -1) {\r\n            this._validateImpacted(this._get(id));\r\n            this._translations.splice(index, 1);\r\n\r\n            this._manager.refreshDataTable();\r\n            \r\n            // Marcar que hay cambios sin guardar\r\n            this.markAsChanged();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Revalida todas las traducciones con la configuración actual\r\n     * Este método es público para poder ser llamado cuando cambia la configuración\r\n     */\r\n    _revalidateAllTranslations() {\r\n        this._translations.forEach(translation => {\r\n            this._validate(translation, false);\r\n        });\r\n    }\r\n    \r\n    async save() {\r\n        // Revalidar todas las traducciones para asegurar que cumplen con la configuración actual\r\n        this._revalidateAllTranslations();\r\n        \r\n        // Verificar si hay traducciones con claves vacías o inválidas\r\n        const invalidTranslations = this._translations.filter(t => !t.valid);\r\n        if (invalidTranslations.length > 0) {\r\n            // Si hay traducciones inválidas, mostrar un mensaje de error y no guardar\r\n            const i18n = I18nService.getInstance();\r\n            NotificationService.getInstance().showErrorMessage(i18n.t('ui.messages.cannotSaveInvalidTranslations'));\r\n            \r\n            // Seleccionar y mostrar la primera traducción inválida para facilitar la corrección\r\n            const firstInvalidTranslation = invalidTranslations[0];\r\n            this.select(firstInvalidTranslation.id);\r\n            this._manager.refreshDataTable();\r\n            \r\n            // Informar al frontend que el guardado falló\r\n            this._manager.sendSaveResult(false);\r\n            \r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Obtener idiomas ocultos para excluirlos del guardado\r\n            const hiddenLanguages = EIJEConfiguration.HIDDEN_COLUMNS;\r\n            \r\n            // Limpiar JSONs existentes (solo de idiomas visibles)\r\n            let existingFolders = [];\r\n            if (this._manager.folderPath) {\r\n                existingFolders.push(this._manager.folderPath);\r\n            } else {\r\n                existingFolders = EIJEConfiguration.WORKSPACE_FOLDERS.map(d => d.path);\r\n            }\r\n            for (const d of existingFolders) {\r\n                for (const language of this._languages) {\r\n                    // Saltar idiomas ocultos - no deben limpiarse ni guardarse\r\n                    if (hiddenLanguages.includes(language)) {\r\n                        continue;\r\n                    }\r\n                    \r\n                    const json = JSON.stringify({}, null, EIJEConfiguration.JSON_SPACE);\r\n                    const f = _path.join(d, language + '.json');\r\n                    await EIJEFileSystem.writeFile(f, json);\r\n                }\r\n            }\r\n\r\n            // Agrupar traducciones por carpeta\r\n            let folders: { [key: string]: EIJEDataTranslation[] } = this._translations.reduce((r, a) => {\r\n                r[a.folder] = r[a.folder] || [];\r\n                r[a.folder].push(a);\r\n                return r;\r\n            }, {});\r\n\r\n            // Guardar traducciones válidas\r\n            for (const [key, value] of Object.entries(folders)) {\r\n                for (const language of this._languages) {\r\n                    // Saltar idiomas ocultos - no deben guardarse\r\n                    if (hiddenLanguages.includes(language)) {\r\n                        continue;\r\n                    }\r\n                    \r\n                    let o = {};\r\n\r\n                    value\r\n                        .filter(translation => translation.valid)\r\n                        .sort((a, b) => (a.key > b.key ? 1 : -1))\r\n                        .forEach(translation => {\r\n                            // Si se permiten traducciones vacías, incluir todas las traducciones\r\n                            // Si no se permiten, solo incluir las que tienen contenido\r\n                            const hasContent = translation.languages[language] && translation.languages[language].trim() !== '';\r\n                            const shouldInclude = hasContent || EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS;\r\n                            \r\n                            if (shouldInclude) {\r\n                                const value = translation.languages[language] || '';\r\n                                this._transformKeysValues(translation.key, value, o);\r\n                            }\r\n                        });\r\n\r\n                    var json = JSON.stringify(o, null, EIJEConfiguration.JSON_SPACE);\r\n                    json = json.replace(/\\n/g, EIJEConfiguration.LINE_ENDING);\r\n                    const f = _path.join(key, language + '.json');\r\n                    await EIJEFileSystem.writeFile(f, json);\r\n                }\r\n            }\r\n            \r\n            // Mostrar mensaje de éxito en VS Code\r\n            NotificationService.getInstance().showInformationMessage(I18nService.getInstance().t('ui.messages.saved'), true);\r\n            \r\n            // Informar al frontend que el guardado fue exitoso\r\n            this._manager.sendSaveResult(true);\r\n            \r\n            // Marcar que no hay cambios sin guardar\r\n            this.markAsSaved();\r\n        } catch (error) {\r\n            // En caso de cualquier error durante el guardado\r\n            NotificationService.getInstance().showErrorMessage(I18nService.getInstance().t('ui.messages.saveError') + ': ' + String(error));\r\n            \r\n            // Informar al frontend que el guardado falló\r\n            this._manager.sendSaveResult(false);\r\n        }\r\n    }\r\n\r\n    search(value: string) {\r\n        this._searchPattern = value;\r\n        this._manager.refreshDataTable();\r\n    }\r\n    \r\n    // Método para descartar cambios\r\n    async discardChanges(): Promise<void> {\r\n        // Reinicializar los datos\r\n        await this.initialize();\r\n        \r\n        // Marcar que no hay cambios sin guardar\r\n        this.markAsSaved();\r\n    }\r\n\r\n    select(id: number, skipRefresh: boolean = false) {\r\n        const translation = this._get(id);\r\n        if (translation) {\r\n            this._view.selectionId = translation.id;\r\n\r\n            if (!skipRefresh) {\r\n                this._manager.refreshDataTable();\r\n            }\r\n        }\r\n    }\r\n    sort(column: string, ascending: boolean, firstPage: boolean = false) {\r\n        this._sort.ascending = this._sort.column !== column ? true : ascending;\r\n        this._sort.column = column;\r\n\r\n        if (firstPage) {\r\n            this.navigate(1);\r\n        } else {\r\n            this._manager.refreshDataTable();\r\n        }\r\n    }\r\n\r\n    switchView(view: EIJEViewType) {\r\n        this._view.type = view;\r\n        this._manager.refreshDataTable();\r\n    }\r\n\r\n    async translate(id: number, language: string = '') {\r\n        const translation = this._get(id);\r\n        if (translation && language) {\r\n            await EIJETranslationService.translate(translation, language, this._languages);\r\n            this._manager.refreshDataTable();\r\n        }\r\n    }\r\n\r\n    update(id: number, value: string, language: string = ''): EIJEDataTranslation {\r\n        const translation = this._get(id);\r\n        if (translation) {\r\n            this._view.selectionId = id;\r\n            if (language) {\r\n                translation.languages[language] = value.replace(/\\\\n/g, '\\n');\r\n                this._validate(translation);\r\n            } else {\r\n                const newKey = EIJEConfiguration.FORCE_KEY_UPPERCASE ? value.toUpperCase() : value;\r\n                const oldKey = translation.key;\r\n\r\n                translation.key = newKey;\r\n\r\n                if (oldKey !== newKey) {\r\n                    this._validateImpacted(translation, oldKey);\r\n                }\r\n                this._validate(translation, true);\r\n                this._manager.updateTranslation(translation);\r\n            }\r\n            \r\n            // Marcar que hay cambios sin guardar\r\n            this.markAsChanged();\r\n        }\r\n\r\n        return translation;\r\n    }\r\n    \r\n    /**\r\n     * Counts all empty translations in the entire dataset\r\n     * @returns Object with count of empty translations and whether any exist\r\n     */\r\n    countEmptyTranslations(): { count: number, hasEmpty: boolean } {\r\n        // Get hidden languages to ignore\r\n        const hiddenLanguages = EIJEConfiguration.HIDDEN_COLUMNS;\r\n        \r\n        // Get all translations (no folder filtering needed since we work with specific folders now)\r\n        let filteredTranslations = this._translations;\r\n        \r\n        // Apply search filter if there is one\r\n        if (this._searchPattern) {\r\n            const regex = new RegExp(`${this._searchPattern}`, 'gmi');\r\n            filteredTranslations = filteredTranslations.filter(t => {\r\n                let match = t.key === '' || regex.test(t.key);\r\n                if (!match) {\r\n                    // Check translations in each language\r\n                    for (const language of this._languages) {\r\n                        if (regex.test(t.languages[language])) {\r\n                            match = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n        \r\n        // Count all empty translations\r\n        let totalCount = 0;\r\n        \r\n        for (const translation of filteredTranslations) {\r\n            for (const language of this._languages) {\r\n                // Skip the key column and hidden languages\r\n                if (language !== 'key' && !hiddenLanguages.includes(language)) {\r\n                    // If translation is empty for this language\r\n                    if (!translation.languages[language]) {\r\n                        totalCount++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        return {\r\n            count: totalCount,\r\n            hasEmpty: totalCount > 0\r\n        };\r\n    }\r\n    \r\n    /**\r\n     * Checks if there are any empty translations in the entire dataset\r\n     * @returns True if there's at least one empty translation in any visible language\r\n     */\r\n    hasEmptyTranslations(): boolean {\r\n        return this.countEmptyTranslations().hasEmpty;\r\n    }\r\n    \r\n    /**\r\n     * Find empty translations on the current page\r\n     * @param currentPage The current page number\r\n     * @returns Array of translation IDs with empty values\r\n     */\r\n    findEmptyTranslations(currentPage: number): { id: number, language: string }[] {\r\n        // Si se permiten traducciones vacías, devolver array vacío\r\n        if (EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS) {\r\n            return [];\r\n        }\r\n        \r\n        const emptyTranslations: { id: number, language: string }[] = [];\r\n        \r\n        // Get hidden languages to ignore\r\n        const hiddenLanguages = EIJEConfiguration.HIDDEN_COLUMNS;\r\n        \r\n        // Get all filtered and sorted translations\r\n        let filteredTranslations = this._getDisplayedTranslations();\r\n        \r\n        // Calculate pagination indexes\r\n        const startIndex = (currentPage - 1) * this._page.pageSize;\r\n        const endIndex = Math.min(startIndex + this._page.pageSize, filteredTranslations.length);\r\n        \r\n        // Get only translations for the current page\r\n        const pageTranslations = filteredTranslations.slice(startIndex, endIndex);\r\n        \r\n        // Find empty translations on this page\r\n        pageTranslations.forEach(translation => {\r\n            this._languages.forEach(language => {\r\n                // Skip the key column and hidden languages\r\n                if (language !== 'key' && !hiddenLanguages.includes(language)) {\r\n                    // Check if the translation for this language is empty\r\n                    if (!translation.languages[language]) {\r\n                        emptyTranslations.push({\r\n                            id: translation.id,\r\n                            language: language\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        });\r\n        \r\n        return emptyTranslations;\r\n    }\r\n    \r\n    /**\r\n     * Find the next empty translation in the entire dataset\r\n     * @returns Object with page number and translation ID of the next empty translation\r\n     */\r\n    findNextEmptyTranslation(): { page: number, id: number, language: string } | null {\r\n        // Start from the current page and then check all other pages\r\n        const currentPage = this._page.pageNumber;\r\n        const pageSize = this._page.pageSize;\r\n        \r\n        // Get hidden languages to ignore\r\n        const hiddenLanguages = EIJEConfiguration.HIDDEN_COLUMNS;\r\n        \r\n        // Get filtered translations (using the same filtering logic as _getDisplayedTranslations)\r\n        let filteredTranslations = this._translations;\r\n        \r\n        // Apply search filter if there is one\r\n        if (this._searchPattern) {\r\n            const regex = new RegExp(`${this._searchPattern}`, 'gmi');\r\n            filteredTranslations = filteredTranslations.filter(t => {\r\n                let match = t.key === '' || regex.test(t.key);\r\n                if (!match) {\r\n                    // Check translations in each language\r\n                    for (const language of this._languages) {\r\n                        if (regex.test(t.languages[language])) {\r\n                            match = true;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                return match;\r\n            });\r\n        }\r\n        \r\n        const totalPages = Math.ceil(filteredTranslations.length / pageSize);\r\n        \r\n        // Check all pages starting from the current one\r\n        for (let p = currentPage; p <= totalPages; p++) {\r\n            const startIndex = (p - 1) * pageSize;\r\n            const endIndex = Math.min(startIndex + pageSize, filteredTranslations.length);\r\n            const pageTranslations = filteredTranslations.slice(startIndex, endIndex);\r\n            \r\n            for (const translation of pageTranslations) {\r\n                for (const language of this._languages) {\r\n                    // Skip the key column and hidden languages\r\n                    if (language !== 'key' && !hiddenLanguages.includes(language)) {\r\n                        // If translation is empty for this language\r\n                        if (!translation.languages[language]) {\r\n                            return {\r\n                                page: p,\r\n                                id: translation.id,\r\n                                language: language\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // If we've reached the last page and found nothing, start from the beginning\r\n        if (currentPage > 1) {\r\n            for (let p = 1; p < currentPage; p++) {\r\n                const startIndex = (p - 1) * pageSize;\r\n                const endIndex = Math.min(startIndex + pageSize, filteredTranslations.length);\r\n                const pageTranslations = filteredTranslations.slice(startIndex, endIndex);\r\n                \r\n                for (const translation of pageTranslations) {\r\n                    for (const language of this._languages) {\r\n                        // Skip the key column and hidden languages\r\n                        if (language !== 'key' && !hiddenLanguages.includes(language)) {\r\n                            // If translation is empty for this language\r\n                            if (!translation.languages[language]) {\r\n                                return {\r\n                                    page: p,\r\n                                    id: translation.id,\r\n                                    language: language\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        \r\n        // No empty translations found\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Create the hierachy based on the key\r\n     */\r\n    private _transformKeysValues(key: string, value: string, o = {}) {\r\n        let separator = EIJEConfiguration.KEY_SEPARATOR ? key.indexOf(EIJEConfiguration.KEY_SEPARATOR) : -1;\r\n        if (separator > 0) {\r\n            const _key = key.substring(0, separator);\r\n            if (!o[_key]) {\r\n                o[_key] = {};\r\n            }\r\n            this._transformKeysValues(key.substring(separator + 1), value, o[_key]);\r\n        } else if (!o[key] && typeof o !== 'string') {\r\n            o[key] = value;\r\n        }\r\n    }\r\n\r\n    /**\r\n     *  Load methods\r\n     */\r\n    private async _loadFiles(): Promise<void> {\r\n        // Verificar si hay una carpeta seleccionada\r\n        if (!this._manager.folderPath && this._manager.isWorkspace) {\r\n            // Si no hay carpeta seleccionada y estamos en modo workspace, no cargar nada\r\n            return;\r\n        }\r\n        \r\n        // Almacenar los idiomas antes de cargar los nuevos archivos\r\n        const previousLanguages = [...this._languages];\r\n        \r\n        // Cargar archivos de idioma\r\n        if (!this._manager.isWorkspace) {\r\n            await this._loadFolder(this._manager.folderPath);\r\n        } else {\r\n            // En modo workspace, solo cargar la carpeta seleccionada\r\n            if (this._manager.folderPath) {\r\n                await this._loadFolder(this._manager.folderPath);\r\n            }\r\n        }\r\n        \r\n        // Detectar idiomas nuevos (no existían antes de cargar los archivos)\r\n        const newlyAddedLanguages = this._languages.filter(lang => \r\n            !previousLanguages.includes(lang)\r\n        );\r\n        \r\n        // Obtener configuración actual\r\n        const currentVisibleColumns = EIJEConfiguration.VISIBLE_COLUMNS;\r\n        const currentHiddenColumns = EIJEConfiguration.HIDDEN_COLUMNS;\r\n        \r\n        if (this._languages.length > 0) {\r\n            // Verificar si es la primera vez que se ejecuta (no hay configuración previa)\r\n            const isFirstRun = currentVisibleColumns.length === 0 && currentHiddenColumns.length === 0;\r\n            \r\n            if (isFirstRun) {\r\n                // Primera ejecución: mostrar todos los idiomas excepto 'en'\r\n                const columnsToShow = this._languages.filter(lang => lang !== 'en');\r\n                EIJEConfiguration.saveVisibleColumns(columnsToShow);\r\n            } else {\r\n                // Ejecuciones posteriores: solo agregar idiomas completamente nuevos\r\n                const completelyNewLanguages = this._languages.filter(lang => \r\n                    lang !== 'en' && \r\n                    !currentVisibleColumns.includes(lang) && \r\n                    !currentHiddenColumns.includes(lang)\r\n                );\r\n                \r\n                if (completelyNewLanguages.length > 0) {\r\n                    const updatedColumns = [...currentVisibleColumns, ...completelyNewLanguages];\r\n                    EIJEConfiguration.saveVisibleColumns(updatedColumns);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private async _loadFolder(folderPath: string): Promise<void> {\r\n        const files = await EIJEFileSystem.readdir(folderPath);\r\n\r\n        const translate: any = {};\r\n        const keys: string[] = [];\r\n        for (const file of files.filter(f => f.endsWith('.json'))) {\r\n            var language = file.split('.')[0];\r\n            if (this._languages.indexOf(language) === -1) {\r\n                this._languages.push(language);\r\n            }\r\n\r\n            try {\r\n                let rawdata = await EIJEFileSystem.readFile(_path.join(folderPath, file));\r\n                let jsonData = this._stripBOM(rawdata.toString());\r\n                let content = JSON.parse(jsonData);\r\n\r\n                let keysValues = this._getKeysValues(content);\r\n\r\n                for (let key in keysValues) {\r\n                    if (keys.indexOf(key) === -1) {\r\n                        keys.push(key);\r\n                    }\r\n                }\r\n                translate[language] = keysValues;\r\n            } catch (e) {\r\n                translate[language] = {};\r\n            }\r\n        }\r\n\r\n        keys.forEach((key: string) => {\r\n            const languages: any = {};\r\n            this._languages.forEach((language: string) => {\r\n                const value = translate[language][key];\r\n                languages[language] = value ? value : '';\r\n            });\r\n\r\n            const t = this._createFactoryIJEDataTranslation();\r\n            t.folder = folderPath;\r\n            t.key = key;\r\n            t.languages = languages;\r\n            this._insert(t);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * For each values get the unique key with hierachy separate by a separator\r\n     */\r\n    private _getKeysValues(obj: any, _key = '') {\r\n        let kv: any = {};\r\n        for (let key in obj) {\r\n            if (typeof obj[key] !== 'string') {\r\n                kv = { ...kv, ...this._getKeysValues(obj[key], _key + key + (EIJEConfiguration.KEY_SEPARATOR || '')) };\r\n            } else {\r\n                kv[_key + key] = obj[key];\r\n            }\r\n        }\r\n        return kv;\r\n    }\r\n\r\n    /**\r\n     * Get all translation displayed on the view based on the active filters and paging options\r\n     */\r\n    private _getDisplayedTranslations(): EIJEDataTranslation[] {\r\n        var o = this._translations;\r\n\r\n        o = o\r\n            .filter(t => {\r\n                let match = false;\r\n                var regex = new RegExp(`${this._searchPattern}`, 'gmi');\r\n                match = t.key === '' || regex.test(t.key);\r\n                if (!match) {\r\n                    this._languages.forEach(language => {\r\n                        var content = t.languages[language] ? t.languages[language] : '';\r\n                        if (!match) {\r\n                            match = regex.test(content);\r\n                        }\r\n                    });\r\n                }\r\n                return match;\r\n            })\r\n            .sort((a, b) => {\r\n                let _a: string, _b: string;\r\n                if (this._view.type === EIJEViewType.LIST || this._sort.column === I18nService.getInstance().t('ui.labels.keyColumn')) {\r\n                    _a = a.key.toLowerCase();\r\n                    _b = b.key.toLowerCase();\r\n                } else if (this._sort.column === I18nService.getInstance().t('ui.labels.folder')) {\r\n                    _a = a.folder + a.key.toLowerCase();\r\n                    _b = b.folder + b.key.toLowerCase();\r\n                } else {\r\n                    _a = a.languages[this._sort.column] ? a.languages[this._sort.column].toLowerCase() : '';\r\n                    _b = b.languages[this._sort.column] ? b.languages[this._sort.column].toLowerCase() : '';\r\n                }\r\n                return ((this._view.type === EIJEViewType.LIST ? true : this._sort.ascending) ? _a > _b : _a < _b) ? 1 : -1;\r\n            });\r\n\r\n        this._page.count = o.length;\r\n        this._page.pageSize = this._view.type === EIJEViewType.LIST ? 15 : this._page.pageSize;\r\n        this._page.totalPages = Math.ceil(this._page.count / this._page.pageSize);\r\n\r\n        if (this._page.pageNumber < 1) {\r\n            this._page.pageNumber = 1;\r\n        }\r\n\r\n        if (this._page.pageNumber > this._page.totalPages) {\r\n            this._page.pageNumber = this._page.totalPages;\r\n        }\r\n\r\n        return o.slice((this._page.pageNumber - 1) * this._page.pageSize, this._page.pageNumber * this._page.pageSize);\r\n    }\r\n\r\n    /**\r\n     * Validations\r\n     */\r\n    private _validateImpacted(translation: EIJEDataTranslation, key: string = undefined) {\r\n        if (key === '') {\r\n            return;\r\n        }\r\n\r\n        const impacted = this._validatePath(translation, false, key);\r\n\r\n        impacted.forEach(i => {\r\n            if (key === undefined || (!this._comparePath(this._split(translation.key), this._split(i.key)) && this._validatePath(i, true).length === 0)) {\r\n                i.valid = true;\r\n                i.error = '';\r\n                this._manager.updateTranslation(i);\r\n            }\r\n        });\r\n    }\r\n\r\n    private _validate(translation: EIJEDataTranslation, keyChanged: boolean = false) {\r\n        var t = this._validatePath(translation);\r\n        if (translation.key === '') {\r\n            translation.valid = false;\r\n            translation.error = getTranslatedError(EIJEDataTranslationError.KEY_NOT_EMPTY);\r\n        } else if (keyChanged) {\r\n            let separator = EIJEConfiguration.KEY_SEPARATOR ? this.escapeRegExp(EIJEConfiguration.KEY_SEPARATOR) : false;\r\n            //does not start or end with the separator or two consecutive separators\r\n            if (separator && new RegExp(`^${separator}|${separator}{2,}|${separator}$`).test(translation.key)) {\r\n                translation.valid = false;\r\n                translation.error = getTranslatedError(EIJEDataTranslationError.INVALID_KEY);\r\n            } else if (this._validatePath(translation).length > 0) {\r\n                translation.valid = false;\r\n                // Encontrar la clave conflictiva para mostrar un mensaje más descriptivo\r\n                const conflictingTranslations = this._validatePath(translation);\r\n                const conflictingKey = conflictingTranslations[0]?.key || '';\r\n                const currentKey = translation.key;\r\n                \r\n                // Determinar cuál es la clave base y cuál es la que se está intentando crear\r\n                const splitCurrent = this._split(currentKey);\r\n                const splitConflicting = this._split(conflictingKey);\r\n                \r\n                let baseKey = '';\r\n                let attemptedKey = '';\r\n                \r\n                if (splitCurrent.length > splitConflicting.length) {\r\n                    // Se está intentando crear una sub-clave de una clave existente\r\n                    baseKey = conflictingKey;\r\n                    attemptedKey = currentKey;\r\n                } else {\r\n                    // Se está intentando crear una clave que entraría en conflicto con sub-claves existentes\r\n                    baseKey = currentKey;\r\n                    attemptedKey = conflictingKey;\r\n                }\r\n                \r\n                translation.error = getTranslatedError(EIJEDataTranslationError.DUPLICATE_PATH, baseKey, attemptedKey);\r\n            } else {\r\n                translation.valid = true;\r\n                translation.error = '';\r\n            }\r\n        }\r\n        \r\n        // Si no se permiten traducciones vacías, validar que no haya ninguna\r\n        if (translation.valid && !EIJEConfiguration.ALLOW_EMPTY_TRANSLATIONS) {\r\n            // Comprobar si hay algún idioma con traducción vacía\r\n            for (const language of this._languages) {\r\n                if (language !== 'key' && \r\n                    !EIJEConfiguration.HIDDEN_COLUMNS.includes(language) && \r\n                    (!translation.languages[language] || translation.languages[language].trim() === '')) {\r\n                    translation.valid = false;\r\n                    translation.error = getTranslatedError(EIJEDataTranslationError.EMPTY_TRANSLATION);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private _validatePath(translation: EIJEDataTranslation, valid: boolean = true, key: string = undefined) {\r\n        const splitKey = this._split(key !== undefined ? key : translation.key);\r\n\r\n        return this._translations.filter(t => {\r\n            if (translation.id === t.id || translation.folder !== t.folder || t.valid !== valid) {\r\n                return false;\r\n            }\r\n            return this._comparePath(splitKey, t.key.split('.'));\r\n        });\r\n    }\r\n\r\n    private _comparePath(a: string[], b: string[]) {\r\n        const _a = a.length >= b.length ? b : a;\r\n        const _b = a.length < b.length ? b : a;\r\n        return _a.every((v: string, i: number) => v === _b[i]);\r\n    }\r\n\r\n    /**\r\n     * Factories\r\n     */\r\n    private _createFactoryIJEDataTranslation(): EIJEDataTranslation {\r\n        return {\r\n            id: this._currentID++,\r\n            folder: this._manager.folderPath || (EIJEConfiguration.WORKSPACE_FOLDERS.length > 0 ? EIJEConfiguration.WORKSPACE_FOLDERS[0].path : ''),\r\n            valid: true,\r\n            error: '',\r\n            key: '',\r\n            languages: {}\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Helpers\r\n     */\r\n    private escapeRegExp(string) {\r\n        return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\r\n    }\r\n\r\n    private _get(id: number): EIJEDataTranslation {\r\n        return this._translations.find(t => t.id === id);\r\n    }\r\n\r\n    private _getIndex(id: number): number {\r\n        return this._translations.findIndex(t => t.id === id);\r\n    }\r\n\r\n    private _insert(translation: EIJEDataTranslation) {\r\n        this._translations.push(translation);\r\n    }\r\n\r\n    private _split(key: string) {\r\n        if (EIJEConfiguration.KEY_SEPARATOR) {\r\n            return key.split(EIJEConfiguration.KEY_SEPARATOR);\r\n        }\r\n        return [key];\r\n    }\r\n\r\n    private _stripBOM(content: string): string {\r\n        if (!content.startsWith('\\uFEFF')) {\r\n            return content;\r\n        }\r\n\r\n        return content.replace('\\uFEFF', '');\r\n    }\r\n}\r\n","/**\r\n * Servicio de sistema de archivos que funciona tanto en Node.js como en entorno web\r\n * Autor: trystan4861\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\n\r\nexport class EIJEFileSystem {\r\n    private static isWebEnvironment(): boolean {\r\n        // Detectar si estamos en un entorno web usando múltiples métodos\r\n        try {\r\n            // Método 1: Verificar si process existe y tiene node\r\n            const noNodeProcess = typeof process === 'undefined' || process.versions?.node === undefined;\r\n            \r\n            // Método 2: Verificar UIKind de VS Code\r\n            const isVSCodeWeb = typeof vscode !== 'undefined' && vscode.env?.uiKind === vscode.UIKind.Web;\r\n            \r\n            // Método 3: Verificar si estamos en un dominio web conocido\r\n            const isWebDomain = typeof globalThis !== 'undefined' && \r\n                typeof globalThis.location !== 'undefined' &&\r\n                (globalThis.location.hostname?.includes('github.dev') || \r\n                 globalThis.location.hostname?.includes('vscode.dev'));\r\n            \r\n            return noNodeProcess || isVSCodeWeb || isWebDomain;\r\n        } catch (error) {\r\n            // En caso de error, asumir entorno web por seguridad\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // Métodos síncronos para compatibilidad con código existente\r\n    static readFileSync(filePath: string): string {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, no podemos hacer operaciones síncronas\r\n            // Retornamos una cadena vacía sin mostrar warning\r\n            return '';\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.readFileSync(filePath, 'utf8');\r\n            } catch (error) {\r\n                console.error('Error reading file:', error);\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n\r\n    static writeFileSync(filePath: string, content: string): void {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, no podemos hacer operaciones síncronas\r\n            // No hacemos nada sin mostrar warning\r\n            return;\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                fs.writeFileSync(filePath, content, 'utf8');\r\n            } catch (error) {\r\n                console.error('Error writing file:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    static existsSync(filePath: string): boolean {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, no podemos hacer operaciones síncronas\r\n            // Retornamos false sin mostrar warning\r\n            return false;\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.existsSync(filePath);\r\n            } catch (error) {\r\n                console.error('Error checking file existence:', error);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static mkdirSync(dirPath: string, options?: any): void {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, no podemos hacer operaciones síncronas\r\n            // No hacemos nada sin mostrar warning\r\n            return;\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                fs.mkdirSync(dirPath, options);\r\n            } catch (error) {\r\n                console.error('Error creating directory:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    static readdirSync(dirPath: string): string[] {\r\n        if (this.isWebEnvironment()) {\r\n            // En entorno web, no podemos hacer operaciones síncronas\r\n            // Retornamos array vacío sin mostrar warning\r\n            return [];\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.readdirSync(dirPath);\r\n            } catch (error) {\r\n                console.error('Error reading directory:', error);\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n\r\n    static async readFile(filePath: string): Promise<string> {\r\n        if (this.isWebEnvironment()) {\r\n            // Usar la API de VS Code para entorno web\r\n            const uri = vscode.Uri.file(filePath);\r\n            const data = await vscode.workspace.fs.readFile(uri);\r\n            // Convertir Uint8Array a string sin usar Buffer\r\n            const decoder = new TextDecoder('utf-8');\r\n            return decoder.decode(data);\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.readFileSync(filePath, 'utf8');\r\n            } catch (error) {\r\n                console.error('Error reading file:', error);\r\n                return '';\r\n            }\r\n        }\r\n    }\r\n\r\n    static async writeFile(filePath: string, content: string): Promise<void> {\r\n        if (this.isWebEnvironment()) {\r\n            // Usar la API de VS Code para entorno web\r\n            const uri = vscode.Uri.file(filePath);\r\n            // Convertir string a Uint8Array sin usar Buffer\r\n            const encoder = new TextEncoder();\r\n            const data = encoder.encode(content);\r\n            await vscode.workspace.fs.writeFile(uri, data);\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                fs.writeFileSync(filePath, content, 'utf8');\r\n            } catch (error) {\r\n                console.error('Error writing file:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    static async exists(filePath: string): Promise<boolean> {\r\n        if (this.isWebEnvironment()) {\r\n            // Usar la API de VS Code para entorno web\r\n            try {\r\n                const uri = vscode.Uri.file(filePath);\r\n                await vscode.workspace.fs.stat(uri);\r\n                return true;\r\n            } catch {\r\n                return false;\r\n            }\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.existsSync(filePath);\r\n            } catch (error) {\r\n                console.error('Error checking file existence:', error);\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    static async readdir(dirPath: string): Promise<string[]> {\r\n        if (this.isWebEnvironment()) {\r\n            // Usar la API de VS Code para entorno web\r\n            const uri = vscode.Uri.file(dirPath);\r\n            const entries = await vscode.workspace.fs.readDirectory(uri);\r\n            return entries.map(([name]) => name);\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                return fs.readdirSync(dirPath);\r\n            } catch (error) {\r\n                console.error('Error reading directory:', error);\r\n                return [];\r\n            }\r\n        }\r\n    }\r\n\r\n    static async mkdir(dirPath: string): Promise<void> {\r\n        if (this.isWebEnvironment()) {\r\n            // Usar la API de VS Code para entorno web\r\n            const uri = vscode.Uri.file(dirPath);\r\n            await vscode.workspace.fs.createDirectory(uri);\r\n        } else {\r\n            // Usar fs para entorno Node.js - importación dinámica\r\n            try {\r\n                const fs = eval('require')('fs');\r\n                if (!fs.existsSync(dirPath)) {\r\n                    fs.mkdirSync(dirPath, { recursive: true });\r\n                }\r\n            } catch (error) {\r\n                console.error('Error creating directory:', error);\r\n            }\r\n        }\r\n    }\r\n}","import { EIJEConfiguration } from '../eije-configuration';\r\nimport { EIJEDataTranslation } from '../models/eije-data-translation';\r\nimport { EIJEPage } from '../models/eije-page';\r\nimport { EIJESort } from '../models/eije-sort';\r\nimport { I18nService } from '../../i18n/i18n-service';\r\n\r\nexport class EIJEDataRenderService {\r\n    static renderPagination(translations: EIJEDataTranslation[], page: EIJEPage, withPageSizeSelector: boolean = true) {\r\n        let render = '<div>';\r\n        render += '<div class=\"row\">';\r\n        render += '<div class=\"col-4\">';\r\n        render += '<div class=\"mt-3\">';\r\n        if (page.count === 0) {\r\n            render += '0 ';\r\n        } else {\r\n            var firstEl = (page.pageNumber - 1) * page.pageSize + 1;\r\n            render += `${firstEl}-${firstEl + (translations.length - 1)} `;\r\n        }\r\n        render += `${I18nService.getInstance().t('ui.labels.of')} ${page.count}`;\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '<div class=\"col-8\">';\r\n        render += '<div class=\"float-right\">';\r\n        render += '<div class=\"form-inline\">';\r\n        if (withPageSizeSelector) {\r\n            render += '<select class=\"form-control form-control-sm mr-4\" style=\"height: 32px;\" onchange=\"pageSize(this)\">';\r\n            [10, 20, 50, 100].forEach(i => {\r\n                render += `<option value=\"${i}\" ${i === page.pageSize ? 'selected=\"selected\"' : ''}>${i}</option>`;\r\n            });\r\n            render += ' </select>';\r\n        }\r\n        render += '<nav class=\"mt-3\">';\r\n        render += '<ul class=\"pagination justify-content-center\">';\r\n        render += `<li class=\"page-item ${page.pageNumber <= 1 ? 'disabled' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"navigate(1)\">|<</a></li>`;\r\n        render += `<li class=\"page-item ${page.pageNumber - 1 < 1 ? 'disabled' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"navigate(${page.pageNumber - 1})\"><</a></li>`;\r\n        render += `<li class=\"page-item ${page.pageNumber + 1 > page.totalPages ? 'disabled' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"navigate(${\r\n            page.pageNumber + 1\r\n        })\">></a></li>`;\r\n        render += `<li class=\"page-item ${page.pageNumber >= page.totalPages ? 'disabled' : ''}\"><a class=\"page-link\" href=\"#\" onclick=\"navigate(${page.totalPages})\">>|</a></li>`;\r\n        render += '</ul>';\r\n        render += '</nav>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n\r\n        return render;\r\n    }\r\n\r\n    private static _getTableHeader(column: string, sort: EIJESort) {\r\n        const isRTL = EIJEConfiguration.isRTL(column);\r\n        const rtlClass = isRTL ? 'rtl-header' : '';\r\n        \r\n        return `<th class=\"text-center ${rtlClass}\" style=\"cursor: pointer;\" onclick=\"sort('${column}',${sort.column === column ? !sort.ascending : true})\" ${isRTL ? 'dir=\"rtl\"' : ''}>\r\n            <div class=\"th\">\r\n           ${column}             \r\n           ${sort.column === column ? (sort.ascending ? '<i class=\"fa-solid fa-chevron-up\"></i>' : '<i class=\"fa-solid fa-chevron-down\"></i>') : ''}\r\n            </div>\r\n        </th>`;\r\n    }\r\n\r\n    /**\r\n     * Ordena los idiomas poniendo el idioma por defecto primero, luego el resto alfabéticamente\r\n     */\r\n    private static sortLanguages(languages: string[]): string[] {\r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        const sortedLanguages = [...languages];\r\n        return sortedLanguages.sort((a, b) => {\r\n            // El idioma por defecto siempre va primero\r\n            if (a === defaultLanguage) {\r\n                return -1;\r\n            }\r\n            if (b === defaultLanguage) {\r\n                return 1;\r\n            }\r\n            // El resto alfabéticamente\r\n            return a.localeCompare(b);\r\n        });\r\n    }\r\n\r\n    static renderColumnSelector(languages: string[]) {\r\n        const i18n = I18nService.getInstance();\r\n        const visibleColumns = EIJEConfiguration.VISIBLE_COLUMNS;\r\n        const hiddenColumns = EIJEConfiguration.HIDDEN_COLUMNS;\r\n        \r\n        // Ordenar idiomas con el idioma por defecto primero\r\n        const sortedLanguages = this.sortLanguages(languages);\r\n        \r\n        let render = '<div class=\"column-selector\">';\r\n        \r\n        render += '<div id=\"columnSelectorContent\" class=\"column-selector-panel\" style=\"display:none;\">';\r\n        render += '<div class=\"card card-body\">';\r\n        render += '<div class=\"column-selector-grid\">';\r\n        \r\n        // Siempre mostrar la columna \"key\" (deshabilitada)\r\n        render += '<div class=\"column-selector-item\">';\r\n        render += '<div class=\"form-check\">';\r\n        render += `<input type=\"checkbox\" class=\"form-check-input\" id=\"column-key\" checked disabled>`;\r\n        render += `<label class=\"form-check-label\" for=\"column-key\">${i18n.t('ui.labels.keyColumn')}</label>`;\r\n        render += '</div>';\r\n        render += '</div>';\r\n        \r\n        // Mostrar idiomas ordenados\r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        sortedLanguages.forEach(language => {\r\n            const isChecked = language === defaultLanguage || visibleColumns.includes(language);\r\n            const isDisabled = language === defaultLanguage; // No se puede ocultar el idioma por defecto\r\n            \r\n            render += '<div class=\"column-selector-item\">';\r\n            render += '<div class=\"form-check\">';\r\n            render += `<input type=\"checkbox\" class=\"form-check-input\" id=\"column-${language}\" `;\r\n            render += isChecked ? 'checked ' : '';\r\n            render += isDisabled ? 'disabled ' : '';\r\n            render += `onchange=\"document.getElementById('apply-columns-btn').disabled = false\">`;\r\n            render += `<label class=\"form-check-label\" for=\"column-${language}\">${language}</label>`;\r\n            render += '</div>';\r\n            render += '</div>';\r\n        });\r\n        \r\n        render += '</div>';\r\n        render += '<div class=\"text-right mt-3\">';\r\n        render += `<button type=\"button\" id=\"apply-columns-btn\" class=\"btn btn-vscode\" onclick=\"applyColumnChanges()\" disabled>${i18n.t('ui.buttons.apply')}</button>`;\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        \r\n        return render;\r\n    }\r\n\r\n    static renderTable(translations: EIJEDataTranslation[], languages: string[], page: EIJEPage, sort: EIJESort, showFolder: boolean = true, hasTranslateService = false) {\r\n        // Get visible columns\r\n        const visibleColumns = EIJEConfiguration.VISIBLE_COLUMNS;\r\n        const allLanguages = [...languages]; // Copia para no modificar el original\r\n        \r\n        // Filtrar idiomas según visibilidad y ordenar con el idioma por defecto primero\r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        const filteredLanguages = this.sortLanguages(\r\n            allLanguages.filter(lang => \r\n                lang === defaultLanguage || visibleColumns.includes(lang)\r\n            )\r\n        );\r\n        \r\n        // Crear selector de columnas\r\n        let render = this.renderColumnSelector(languages);\r\n        \r\n        render += '<table class=\"table table-borderless\">';\r\n        render += '<tr>';\r\n        render += '<th></th>';\r\n        if (showFolder) {\r\n            render += this._getTableHeader(I18nService.getInstance().t('ui.labels.folder'), sort);\r\n        }\r\n        render += this._getTableHeader(I18nService.getInstance().t('ui.labels.keyColumn'), sort);\r\n\r\n        // Solo mostrar los encabezados de las columnas visibles\r\n        filteredLanguages.forEach((language: string) => {\r\n            render += `${this._getTableHeader(language, sort)}`;\r\n        });\r\n        render += '</tr>';\r\n\r\n        translations.forEach(t => {\r\n            render += '<tr>';\r\n            render += `<td class=\"td-remove\"><button type=\"button\" class=\"btn p-0 px-1\" onclick=\"remove(${t.id})\"><i class=\"error-vscode fa-duotone fa-regular fa-circle-minus\"></i></button></td>`;\r\n\r\n            if (showFolder) {\r\n                render += `<td><select id=\"select-folder-${t.id}\" class=\"form-control\" onchange=\"updateFolder(this,${t.id})\">`;\r\n                const folders = EIJEConfiguration.WORKSPACE_FOLDERS;\r\n                folders.forEach(d => {\r\n                    render += `<option value='${d.path.replace(/\"/g, '&quot;')}' ${d.path === t.folder ? 'selected' : ''}>${d.name}</option>`;\r\n                });\r\n                render += ' </select></td>';\r\n            }\r\n\r\n            render += `\r\n                <td>\r\n                    <input id=\"input-key-${t.id}\" class=\"form-control ${t.valid ? '' : 'is-invalid'}\" type=\"text\" placeholder=\"${I18nService.getInstance().t('ui.placeholders.key')}\" value=\"${t.key.replace(\r\n                /\"/g,\r\n                '&quot;'\r\n            )}\" onfocus=\"mark(${t.id})\" oninput=\"updateInput(this,${t.id});\" onchange=\"updateInput(this,${t.id});\" />\r\n                    <div id=\"input-key-${t.id}-feedback\" class=\"invalid-feedback error-vscode\">${t.error}</div>\r\n                </td>\r\n            `;\r\n\r\n            // Solo mostrar las celdas de las columnas visibles\r\n            filteredLanguages.forEach((language: string) => {\r\n                const isRTL = EIJEConfiguration.isRTL(language);\r\n                const rtlClass = isRTL ? 'rtl-text' : '';\r\n                \r\n                render += '<td>';\r\n                if (hasTranslateService) {\r\n                    render += `<div class=\"input-group\">`;\r\n                }\r\n                const isEmpty = !t.languages[language] || t.languages[language].trim() === '';\r\n                render += `<input class=\"form-control ${rtlClass} ${isEmpty ? 'empty-translation' : ''}\" type=\"text\" placeholder=\"${I18nService.getInstance().t('ui.placeholders.translation')}\" \r\n                    onfocus=\"mark(${t.id})\" \r\n                    oninput=\"updateInput(this,${t.id},'${language}');\" \r\n                    onchange=\"updateInput(this,${t.id},'${language}');\" \r\n                    ${isRTL ? 'dir=\"rtl\"' : ''} `;\r\n                if (t.languages[language]) {\r\n                    render += `value=\"${t.languages[language].replace(/\\n/g, '\\\\n').replace(/\"/g, '&quot;')}\" `;\r\n                }\r\n                render += '/>';\r\n                if (hasTranslateService) {\r\n                    render += `<div class=\"input-group-append\">\r\n                               <button type=\"button\" class=\"btn btn-vscode\" onclick=\"translateInput(this,${t.id}, '${language}');\"><i class=\"icon-language\"></i></button>\r\n                           </div>`;\r\n                    render += '</div>';\r\n                }\r\n                render += '</td>';\r\n            });\r\n\r\n            render += '</tr>';\r\n        });\r\n        render += '</table>';\r\n\r\n        render += this.renderPagination(translations, page);\r\n\r\n        return render;\r\n    }\r\n\r\n    static renderList(\r\n        translations: EIJEDataTranslation[],\r\n        selectTranslation: EIJEDataTranslation,\r\n        languages: string[],\r\n        page: EIJEPage,\r\n        sort: EIJESort,\r\n        showFolder: boolean = true,\r\n        hasTranslateService = false\r\n    ) {\r\n        // Get visible columns\r\n        const visibleColumns = EIJEConfiguration.VISIBLE_COLUMNS;\r\n        const allLanguages = [...languages]; // Copia para no modificar el original\r\n        \r\n        // Filtrar idiomas según visibilidad y ordenar con el idioma por defecto primero\r\n        const defaultLanguage = EIJEConfiguration.DEFAULT_LANGUAGE;\r\n        const filteredLanguages = this.sortLanguages(\r\n            allLanguages.filter(lang => \r\n                lang === defaultLanguage || visibleColumns.includes(lang)\r\n            )\r\n        );\r\n        \r\n        let render = this.renderColumnSelector(languages);\r\n        \r\n        render += '<div>';\r\n        render += '<div class=\"row\">';\r\n        render += '<div class=\"col-5 pt-15px\">';\r\n        render += this.renderPagination(translations, page, false);\r\n        render += '<div style=\"word-wrap: break-word;\" class=\"list-group\">';\r\n        translations.forEach(t => {\r\n            render += `<a href=\"#\" id=\"select-key-${t.id}\" onclick=\"select(${t.id})\" class=\"btn-vscode-secondary list-group-item list-group-item-action ${\r\n                selectTranslation && selectTranslation.id === t.id ? 'active' : ''\r\n            }\">${t.key === '' ? '&nbsp;' : t.key}</a>`;\r\n        });\r\n        render += '</div>';\r\n        render += '</div>';\r\n\r\n        render += '<div class=\"col-7\">';\r\n\r\n        if (selectTranslation) {\r\n            if (showFolder) {\r\n                render += ` \r\n                  <div class=\"form-group\">\r\n                    <label>${I18nService.getInstance().t('ui.labels.directory')}</label>\r\n                    <div class=\"row\">\r\n                      <div class=\"col-12\">\r\n                        <select id=\"select-folder-${selectTranslation.id}\" class=\"form-control\" onchange=\"updateFolder(this,${selectTranslation.id})\">`;\r\n\r\n                const folders = EIJEConfiguration.WORKSPACE_FOLDERS;\r\n                folders.forEach(d => {\r\n                    render += `<option value='${d.path}' ${d.path === selectTranslation.folder ? 'selected' : ''}>${d.name}</option>`;\r\n                });\r\n                render += `\r\n                        </select>               \r\n                      </div>\r\n                    </div>\r\n                  </div>`;\r\n            }\r\n\r\n            render += `\r\n                <div class=\"form-group\">\r\n                    <label>${I18nService.getInstance().t('ui.labels.key')}</label>\r\n                    <div class=\"row ml--30 mr--18\">\r\n                        <div class=\"col-1 p-0 align-content-center div-remove\">\r\n                            <button type=\"button\" class=\"btn p-0 px-1\" onclick=\"remove(${selectTranslation.id})\"><i class=\"error-vscode fa-duotone fa-regular fa-circle-minus\"></i></button>\r\n                        </div>\r\n                        <div class=\"col-11 p-0\">\r\n                            <input id=\"input-key-${selectTranslation.id}\" class=\"form-control ${\r\n                selectTranslation.valid ? '' : 'is-invalid'\r\n            }\" type=\"text\" placeholder=\"${I18nService.getInstance().t('ui.placeholders.key')}\" value=\"${selectTranslation.key}\" oninput=\"updateInput(this,${selectTranslation.id});\" onchange=\"updateInput(this,${selectTranslation.id});\" />\r\n                            <div id=\"input-key-${selectTranslation.id}-feedback\" class=\"invalid-feedback error-vscode\">${selectTranslation.error}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>`;\r\n            \r\n            // Solo mostrar los campos de texto de los idiomas visibles\r\n            filteredLanguages.forEach((language: string) => {\r\n                const isRTL = EIJEConfiguration.isRTL(language);\r\n                const rtlClass = isRTL ? 'rtl-text' : '';\r\n                \r\n                render += `<label>${language}</label>`;\r\n                if (hasTranslateService) {\r\n                    render += `<div class=\"row\">\r\n                                    <div class=\"col-10\">`;\r\n                }\r\n                render += `<textarea class=\"form-control mb-2 ${rtlClass}\" rows=\"6\" \r\n                    placeholder=\"${I18nService.getInstance().t('ui.placeholders.translation')}\" \r\n                    oninput=\"updateInput(this,${selectTranslation.id},'${language}');\" \r\n                    onchange=\"updateInput(this,${selectTranslation.id},'${language}');\" \r\n                    ${isRTL ? 'dir=\"rtl\"' : ''}>`;\r\n                if (selectTranslation.languages[language]) {\r\n                    render += selectTranslation.languages[language];\r\n                }\r\n                render += '</textarea>';\r\n                if (hasTranslateService) {\r\n                    render += `</div>\r\n                                    <div class=\"col-2\">\r\n                                        <button type=\"button\" class=\"btn btn-vscode\" onclick=\"translateInput(this,${selectTranslation.id}, '${language}');\"><i class=\"icon-language\"></i></button>\r\n                                    </div>\r\n                                </div>\r\n                            `;\r\n                }\r\n            });\r\n        }\r\n\r\n        render += '</div>';\r\n        render += '</div>';\r\n        render += '</div>';\r\n        return render;\r\n    }\r\n}\r\n","import * as vscode from 'vscode';\r\nimport * as path from 'path';\r\nimport { EIJEFileSystem } from '../ei18n-json-editor/services/eije-filesystem';\r\nimport { translations } from './translations';\r\n\r\nexport class I18nService {\r\n    private static instance: I18nService;\r\n    private translations: { [key: string]: any } = {};\r\n    private currentLanguage: string = 'en';\r\n    private isLoaded: boolean = false;\r\n    private loadPromise: Promise<void> | null = null;\r\n\r\n    private constructor(private context: vscode.ExtensionContext) {\r\n        this.loadPromise = this.loadTranslations();\r\n    }\r\n\r\n    public static getInstance(context?: vscode.ExtensionContext): I18nService {\r\n        if (!I18nService.instance && context) {\r\n            I18nService.instance = new I18nService(context);\r\n        }\r\n        return I18nService.instance;\r\n    }\r\n\r\n    private isWebEnvironment(): boolean {\r\n        return typeof process === 'undefined' || process.versions?.node === undefined;\r\n    }\r\n\r\n    private async loadTranslations(): Promise<void> {\r\n        try {\r\n            if (this.isWebEnvironment()) {\r\n                // En entorno web, usar las traducciones embebidas\r\n                this.translations = translations;\r\n                this.isLoaded = true;\r\n            } else {\r\n                // En entorno Node.js, cargar desde archivos\r\n                const langFiles = ['en.json', 'es.json'];\r\n                const i18nDir = path.join(this.context.extensionPath, 'src', 'i18n');\r\n\r\n                for (const file of langFiles) {\r\n                    try {\r\n                        const lang = file.split('.')[0];\r\n                        const filePath = path.join(i18nDir, file);\r\n                        if (await EIJEFileSystem.exists(filePath)) {\r\n                            const content = await EIJEFileSystem.readFile(filePath);\r\n                            this.translations[lang] = JSON.parse(content);\r\n                        }\r\n                    } catch (error) {\r\n                        console.error(`Failed to load translation file ${file}:`, error);\r\n                    }\r\n                }\r\n                this.isLoaded = true;\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to load translations:', error);\r\n            // Fallback a traducciones embebidas\r\n            this.translations = translations;\r\n            this.isLoaded = true;\r\n        }\r\n    }\r\n\r\n    public async waitForLoad(): Promise<void> {\r\n        if (this.loadPromise) {\r\n            await this.loadPromise;\r\n        }\r\n    }\r\n\r\n    public setLanguage(lang: string): void {\r\n        if (this.translations[lang]) {\r\n            this.currentLanguage = lang;\r\n        } else {\r\n            console.warn(`Language ${lang} not available, using default language`);\r\n        }\r\n    }\r\n\r\n    public getLanguage(): string {\r\n        return this.currentLanguage;\r\n    }\r\n\r\n    public t(key: string, ...args: any[]): string {\r\n        try {\r\n            // Si las traducciones no están cargadas, usar fallback\r\n            if (!this.isLoaded || !this.translations[this.currentLanguage]) {\r\n                // Intentar usar traducciones embebidas como fallback\r\n                const fallbackTranslations = translations[this.currentLanguage as keyof typeof translations] || translations.en;\r\n                const keyParts = key.split('.');\r\n                let value: any = fallbackTranslations;\r\n                \r\n                for (const part of keyParts) {\r\n                    value = value?.[part];\r\n                    if (value === undefined) {\r\n                        return key; // Return the key if the translation is not found\r\n                    }\r\n                }\r\n                \r\n                // Replace {0}, {1}, etc. with the corresponding arguments\r\n                if (args.length > 0 && typeof value === 'string') {\r\n                    return value.replace(/{(\\d+)}/g, (match, index) => {\r\n                        const argIndex = parseInt(index, 10);\r\n                        return argIndex < args.length ? args[argIndex] : match;\r\n                    });\r\n                }\r\n                \r\n                return typeof value === 'string' ? value : key;\r\n            }\r\n\r\n            const keyParts = key.split('.');\r\n            let value: any = this.translations[this.currentLanguage];\r\n            \r\n            for (const part of keyParts) {\r\n                value = value?.[part];\r\n                if (value === undefined) {\r\n                    return key; // Return the key if the translation is not found\r\n                }\r\n            }\r\n            \r\n            // Replace {0}, {1}, etc. with the corresponding arguments\r\n            if (args.length > 0 && typeof value === 'string') {\r\n                return value.replace(/{(\\d+)}/g, (match, index) => {\r\n                    const argIndex = parseInt(index, 10);\r\n                    return argIndex < args.length ? args[argIndex] : match;\r\n                });\r\n            }\r\n            \r\n            return typeof value === 'string' ? value : key;\r\n        } catch (error) {\r\n            console.error(`Translation error for key ${key}:`, error);\r\n            return key;\r\n        }\r\n    }\r\n}","export interface EIJEDataTranslation {\r\n    id: number;\r\n    folder: string;\r\n    key: string;\r\n    valid: boolean;\r\n    error: string;\r\n    languages: { [language: string]: string };\r\n}\r\n\r\nimport { I18nService } from '../../i18n/i18n-service';\r\n\r\nexport enum EIJEDataTranslationError {\r\n    INVALID_KEY = 'ui.errors.invalidKey',\r\n    KEY_NOT_EMPTY = 'ui.errors.keyNotEmpty',\r\n    DUPLICATE_PATH = 'ui.errors.duplicatePath',\r\n    EMPTY_TRANSLATION = 'ui.errors.emptyTranslation'\r\n}\r\n\r\n// Helper function to get translated error message\r\nexport function getTranslatedError(error: EIJEDataTranslationError, ...params: string[]): string {\r\n    return I18nService.getInstance().t(error, ...params);\r\n}\r\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","export interface EIJEView {\r\n    type: EIJEViewType;\r\n    selectionId?: number;\r\n}\r\nexport enum EIJEViewType {\r\n    TABLE = 'table',\r\n    LIST = 'list'\r\n}","import axios from 'axios';\r\nimport { EIJEConfiguration } from '../../eije-configuration';\r\nimport { EIJETranlsation } from './eije-translation';\r\n\r\nexport class EIJEMicrosoftTranslator implements EIJETranlsation {\r\n    async translate(text: string, language: string, languages: string[]): Promise<{ [language: string]: string }> {\r\n        const endpoint = 'https://api.cognitive.microsofttranslator.com';\r\n\r\n        var response = await axios({\r\n            baseURL: endpoint,\r\n            url: '/translate',\r\n            method: 'post',\r\n            headers: {\r\n                'Ocp-Apim-Subscription-Key': EIJEConfiguration.TRANSLATION_SERVICE_API_KEY,\r\n                'Content-type': 'application/json'\r\n            },\r\n            params: {\r\n                'api-version': '3.0',\r\n                from: language,\r\n                to: languages.filter(l => l !== language)\r\n            },\r\n            data: [\r\n                {\r\n                    text: text\r\n                }\r\n            ],\r\n            responseType: 'json'\r\n        });\r\n\r\n        const data = response.data;\r\n\r\n        if (data.length === 0) {\r\n            return {};\r\n        }\r\n\r\n        return Object.assign(\r\n            {},\r\n            ...languages\r\n                .filter(l => l !== language)\r\n                .map(l => ({\r\n                    [l]: data[0].translations.filter(t => t.to === l)[0].text as string\r\n                }))\r\n        );\r\n    }\r\n}\r\n","/**\r\n * Servicio para manejar notificaciones usando Flashy.js\r\n * @author trystan4861\r\n */\r\n\r\nimport * as vscode from 'vscode';\r\n\r\nexport class NotificationService {\r\n    private static _instance: NotificationService;\r\n    private _webviewPanel: vscode.WebviewPanel | null = null;\r\n    \r\n    private constructor() {}\r\n    \r\n    public static getInstance(): NotificationService {\r\n        if (!NotificationService._instance) {\r\n            NotificationService._instance = new NotificationService();\r\n        }\r\n        return NotificationService._instance;\r\n    }\r\n    \r\n    /**\r\n     * Establece el panel de webview para enviar notificaciones\r\n     * @param panel Panel de webview activo\r\n     */\r\n    public setWebviewPanel(panel: vscode.WebviewPanel): void {\r\n        this._webviewPanel = panel;\r\n    }\r\n    \r\n    /**\r\n     * Muestra un mensaje informativo usando Flashy\r\n     * @param message Mensaje a mostrar\r\n     * @param isSaveMessage Indica si es un mensaje de guardado\r\n     */\r\n    public showInformationMessage(message: string, isSaveMessage: boolean = false): void {\r\n        this.sendFlashyNotification(message, 'success', 3000);\r\n    }\r\n    \r\n    /**\r\n     * Muestra un mensaje de error usando Flashy\r\n     * @param message Mensaje de error a mostrar\r\n     */\r\n    public showErrorMessage(message: string): void {\r\n        this.sendFlashyNotification(message, 'error', 0); // 0 = sin auto-cierre\r\n    }\r\n    \r\n    /**\r\n     * Muestra un mensaje de advertencia usando Flashy\r\n     * @param message Mensaje de advertencia a mostrar\r\n     */\r\n    public showWarningMessage(message: string): void {\r\n        this.sendFlashyNotification(message, 'warning', 3000);\r\n    }\r\n    \r\n    /**\r\n     * Envía una notificación Flashy al webview\r\n     * @param message Mensaje a mostrar\r\n     * @param type Tipo de notificación (success, error, warning, info)\r\n     * @param duration Duración en milisegundos (0 = sin auto-cierre)\r\n     */\r\n    private sendFlashyNotification(message: string, type: string, duration: number): void {\r\n        if (!this._webviewPanel) {\r\n            // Fallback a notificaciones nativas de VSCode si no hay webview\r\n            switch (type) {\r\n                case 'success':\r\n                    vscode.window.showInformationMessage(message);\r\n                    break;\r\n                case 'error':\r\n                    vscode.window.showErrorMessage(message);\r\n                    break;\r\n                case 'warning':\r\n                    vscode.window.showWarningMessage(message);\r\n                    break;\r\n                default:\r\n                    vscode.window.showInformationMessage(message);\r\n            }\r\n            return;\r\n        }\r\n\r\n        this._webviewPanel.webview.postMessage({\r\n            command: 'showFlashyNotification',\r\n            message: message,\r\n            type: type,\r\n            duration: duration\r\n        });\r\n    }\r\n}","// 'path' module extracted from Node.js v8.11.1 (only the posix part)\n// transplited with Babel\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 /*.*/ || res.charCodeAt(res.length - 2) !== 46 /*.*/) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 /*.*/ && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          if (!matchedSlash) {\n            end = i;\n            break;\n          }\n        } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n            // If we reached a path separator that was not part of a set of path\n            // separators at the end of the string, stop now\n            if (!matchedSlash) {\n              start = i + 1;\n              break;\n            }\n          } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1)\n            startDot = i;\n          else if (preDotState !== 1)\n            preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            startPart = i + 1;\n            break;\n          }\n          continue;\n        }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46 /*.*/) {\n          // If this is our first dot, mark it as the start of our extension\n          if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n        } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","import * as vscode from 'vscode';\r\nimport * as _path from 'path';\r\n\r\nimport { EIJEEditorProvider } from './ei18n-json-editor/providers/eije-editor-provider';\r\nimport { EIJEConfiguration } from './ei18n-json-editor/eije-configuration';\r\nimport { I18nService } from './i18n/i18n-service';\r\n\r\nexport async function activate(context: vscode.ExtensionContext) {\r\n    // Initialize the i18n service\r\n    const i18n = I18nService.getInstance(context);\r\n    \r\n    // Wait for translations to load\r\n    await i18n.waitForLoad();\r\n    \r\n    // Set language based on VS Code UI language\r\n    const vscodeLanguage = vscode.env.language;\r\n    if (vscodeLanguage.startsWith('es')) {\r\n        i18n.setLanguage('es');\r\n    } else {\r\n        i18n.setLanguage('en');\r\n    }\r\n\r\n    if (EIJEConfiguration.WORKSPACE_FOLDERS) {\r\n        let myStatusBarItem: vscode.StatusBarItem = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left, 100);\r\n        myStatusBarItem.command = 'ei18n-json-editor';\r\n        myStatusBarItem.text = `$(symbol-string) ${i18n.t('extension.statusBar')}`;\r\n        myStatusBarItem.show();\r\n    }\r\n\r\n    // Al hacer clic en el icono de la barra de actividad, queremos que se abra directamente el editor\r\n    // Mantenemos un TreeDataProvider mínimo para mostrar algo en la vista\r\n    class SimpleTreeDataProvider implements vscode.TreeDataProvider<string> {\r\n        private _onDidChangeTreeData: vscode.EventEmitter<string | undefined | null | void> = new vscode.EventEmitter<string | undefined | null | void>();\r\n        readonly onDidChangeTreeData: vscode.Event<string | undefined | null | void> = this._onDidChangeTreeData.event;\r\n        \r\n        getTreeItem(element: string): vscode.TreeItem {\r\n            return new vscode.TreeItem(element, vscode.TreeItemCollapsibleState.None);\r\n        }\r\n        \r\n        getChildren(element?: string): Thenable<string[]> {\r\n            if (element) {\r\n                return Promise.resolve([]);\r\n            }\r\n            return Promise.resolve([i18n.t('extension.openingEditor')]);\r\n        }\r\n    }\r\n    \r\n    const treeView = vscode.window.createTreeView('trystan4861-eije-view', { \r\n        treeDataProvider: new SimpleTreeDataProvider(),\r\n        showCollapseAll: false\r\n    });\r\n    \r\n    // Cuando la vista se vuelve visible, automáticamente abrir el editor\r\n    treeView.onDidChangeVisibility(e => {\r\n        if (e.visible) {\r\n            // Pequeño retraso para asegurar que todo esté listo\r\n            setTimeout(() => {\r\n                vscode.commands.executeCommand('ei18n-json-editor').then(() => {\r\n                    // Opcionalmente, ocultar la vista después de abrir el editor\r\n                    vscode.commands.executeCommand('workbench.action.toggleSidebarVisibility');\r\n                });\r\n            }, 100);\r\n        }\r\n    });\r\n    \r\n    context.subscriptions.push(treeView);\r\n    \r\n    context.subscriptions.push(EIJEEditorProvider.register(context));\r\n}\r\n"],"names":["constructor","_context","_panel","folderPath","NotificationService","getInstance","setWebviewPanel","this","EIJEConfiguration","initializeConfigurationAsync","then","webview","postMessage","command","allowEmptyTranslations","ALLOW_EMPTY_TRANSLATIONS","defaultLanguage","DEFAULT_LANGUAGE","forceKeyUPPERCASE","FORCE_KEY_UPPERCASE","catch","error","console","saveFullConfiguration","_previousAllowEmptyTranslations","subscriptions","push","vscode","workspace","onDidChangeConfiguration","e","affectsConfiguration","newAllowEmptyValue","_data","_revalidateAllTranslations","currentPage","getCurrentPage","checkEmptyTranslations","refreshDataTable","EIJEData","_initEvents","_initTemplate","initializeTemplate","_initializeData","onDidDispose","isWorkspace","templateHtml","getTemplateAsync","html","setInitialWorkspaceFolder","initialize","cleanupDeletedLanguages","initializeWorkspaceFolderSelector","getFolderPath","updateFolderPath","reloadData","onDidReceiveMessage","async","message","add","mark","id","navigate","page","pageSize","value","_showNewLanguageInput","createNewLanguage","langCode","remove","save","switchWorkspaceFolder","folderName","discardChangesAndSwitchWorkspaceFolder","discardChanges","search","select","sort","column","ascending","switchView","view","update","language","translate","toggleColumnVisibility","visible","updateColumnVisibility","columnsToShow","columnsToHide","navigateToNextEmptyTranslation","clearConfigCache","visibleColumns","VISIBLE_COLUMNS","hiddenColumns","HIDDEN_COLUMNS","includes","filter","col","Promise","all","saveVisibleColumns","saveHiddenColumns","setTimeout","allLanguages","getLanguages","newVisibleColumns","newHiddenColumns","forEach","currentVisible","currentHidden","i18n","I18nService","showInformationMessage","t","window","showInputBox","prompt","placeHolder","validateInput","trim","length","showErrorMessage","targetPath","WORKSPACE_FOLDERS","path","filePath","_path","join","EIJEFileSystem","exists","showWarningMessage","englishFilePath","jsonContent","englishContent","readFile","JSON","parse","err","fileContent","stringify","JSON_SPACE","writeFile","addLanguageAsVisible","errorMessage","Error","String","availableLanguages","DEFAULT_WORKSPACE_FOLDER","originalVisibleCount","originalHiddenCount","log","workspaceFolder","workspaceFolders","configPath","uri","fsPath","existsSync","configContent","readFileSync","config","originalGlobalVisibleCount","writeFileSync","originalGlobalHiddenCount","Array","isArray","configUpdated","folder","originalFolderVisibleCount","originalFolderHiddenCount","rootConfigUpdated","Object","keys","key","startsWith","emptyTranslations","findEmptyTranslations","emptyTranslationsCount","countEmptyTranslations","hasError","hasEmpty","hasEmptyTranslations","hasAnyEmptyTranslations","totalEmptyCount","count","nextEmptyTranslation","findNextEmptyTranslation","folders","render","updateTranslation","translation","sendSaveResult","success","template","Uri","file","extensionPath","linksPath","scriptsPath","templateContent","linksHtml","map","l","asWebviewUri","with","scheme","scriptsHtml","replace","match","getTemplate","toString","hasUnsavedChanges","saveDefaultWorkspaceFolder","selectedFolder","find","f","name","defaultFolder","matchingFolder","some","currentFolder","activeFolder","currentFolderObj","translations","en","es","specificKey","_configCache","getConfigPath","vscodePath","mkdirSync","recursive","_configFileCreated","createDefaultConfigFile","defaultConfig","jsonSpace","keySeparator","lineEnding","supportedFolders","defaultWorkspaceFolder","translationService","translationServiceApiKey","getConfigPathAsync","mkdir","isWebEnvironment","_isWebEnvironmentCache","noNodeProcess","process","undefined","versions","node","isVSCodeWeb","env","uiKind","UIKind","Web","isWebDomain","globalThis","location","hostname","isWeb","workspaceScheme","hasNodeProcess","finalResult","isRTL","baseLanguage","split","toLowerCase","RTL_LANGUAGES","getConfigValue","configName","globalSettingName","defaultValue","cacheKey","globalValue","getConfiguration","get","loadConfigFromFileAsync","fileValue","getConfigValueAsync","KEY_SEPARATOR","LINE_ENDING","SUPPORTED_FOLDERS","TRANSLATION_SERVICE","TRANSLATION_SERVICE_API_KEY","currentWorkspaceFolder","folderConfig","saveFullConfigurationAsync","ConfigurationTarget","Global","folderIndex","findIndex","columns","updateWorkspaceFolderConfig","configUpdate","updatedFolders","_folders","d","EIJEEditorProvider","register","context","isSupportedFolder","rootPath","supportedFolder","folderBaseName","relativePath","normalizedFolderPath","normalizedRootPath","pathParts","substring","basename","relative","cleanPath","expectedPath","resolve","isSupportedFolderAsync","updateContextMenu","commands","executeCommand","configListener","registerCommand","testPath","currentPanel","reveal","ViewColumn","One","currentManager","panel","createWebviewPanel","retainContextWhenHidden","enableScripts","localResourceRoots","manager","EIJEManager","module","exports","require","TranslationServiceEnum","languages","tranlsationService","ComingSoon","service","MicrosoftTranslator","EIJEMicrosoftTranslator","data","bind","fn","thisArg","apply","arguments","prototype","getPrototypeOf","iterator","toStringTag","Symbol","kindOf","cache","create","thing","str","call","slice","kindOfTest","type","typeOfTest","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","obj","allOwnKeys","i","getOwnPropertyNames","len","findKey","_key","_global","self","g","isContextDefined","isTypedArray","TypedArray","Uint8Array","isHTMLForm","hasOwnProperty","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","ret","defineProperties","isAsyncFn","_setImmediate","setImmediateSupported","setImmediate","postMessageSupported","token","Math","random","callbacks","addEventListener","source","shift","cb","asap","queueMicrotask","nextTick","utils$1","isBuffer","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","assignValue","targetKey","extend","a","b","stripBOM","content","charCodeAt","inherits","superConstructor","props","defineProperty","assign","toFlatObject","sourceObj","destObj","propFilter","merged","endsWith","searchString","position","lastIndex","indexOf","toArray","arr","forEachEntry","_iterator","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","toObjectSet","arrayOrString","delimiter","define","toCamelCase","m","p1","p2","toUpperCase","noop","toFiniteNumber","Number","isFinite","global","isSpecCompliantForm","toJSONObject","stack","visit","target","reducedValue","isThenable","isIterable","AxiosError","code","request","response","captureStackTrace","status","toJSON","description","number","fileName","lineNumber","columnNumber","prototype$1","isVisitable","removeBrackets","renderKey","dots","concat","from","customProps","axiosError","cause","predicates","test","toFormData","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","isFlatArray","el","index","exposedHelpers","build","pop","encode$1","charMap","encodeURIComponent","AxiosURLSearchParams","params","_pairs","encode","buildURL","url","_encode","serialize","serializeFn","serializedParams","hashmarkIndex","encoder","InterceptorManager$1","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","clear","h","transitionalDefaults","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","platform$1","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","href","platform","freeze","__proto__","formDataToJSON","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","rawValue","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","defaults$1","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","parseHeaders","dest","entry","parser","tokens","tokensRE","parseTokens","has","matcher","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","targets","asStrings","getSetCookie","first","computed","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","AxiosHeaders$1","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","reject","ERR_BAD_REQUEST","floor","progressEventReducer","listener","isDownloadStream","freq","bytesNotified","_speedometer","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","speedometer","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","isURLSameOrigin","isMSIE","URL","protocol","host","port","userAgent","cookies","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","buildFullPath","baseURL","requestedURL","allowAbsoluteUrls","isRelativeUrl","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","resolveConfig","newConfig","auth","btoa","username","password","unescape","Boolean","xsrfValue","xhrAdapter","XMLHttpRequest","_config","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals$1","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","trackStream","stream","onProgress","onFinish","iterable","asyncIterator","reader","getReader","readStream","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","knownAdapters","http","xhr","fetchOptions","composedSignal","toAbortSignal","requestContentLength","getContentLength","size","_request","getBodyLength","resolveBodyLength","contentTypeHeader","flush","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","throwIfCancellationRequested","throwIfRequested","dispatchRequest","validators$1","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","warn","spelling","correctSpelling","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","validators","Axios","instanceConfig","interceptors","configOrUrl","dummy","boolean","function","baseUrl","withXsrfToken","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","Axios$1","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","CancelToken$1","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","HttpStatusCode$1","axios","createInstance","instance","VERSION","Cancel","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","_manager","_currentID","_languages","_translations","_unsavedChanges","_searchPattern","_defaultValues","markAsChanged","markAsSaved","getAllTranslations","getPageSize","_page","pageNumber","_loadFiles","_view","EIJEViewType","TABLE","selectionId","_sort","_createFactoryIJEDataTranslation","valid","getTranslatedError","EIJEDataTranslationError","KEY_NOT_EMPTY","_insert","_get","skipRefresh","_hasTranslationService","_getDisplayedTranslations","hasTranslateService","LIST","EIJEDataRenderService","renderList","renderTable","_getIndex","_validateImpacted","_validate","invalidTranslations","firstInvalidTranslation","hiddenLanguages","existingFolders","json","reduce","r","o","_transformKeysValues","firstPage","EIJETranslationService","newKey","oldKey","filteredTranslations","regex","totalCount","startIndex","endIndex","totalPages","ceil","p","pageTranslations","separator","previousLanguages","_loadFolder","lang","currentVisibleColumns","currentHiddenColumns","completelyNewLanguages","updatedColumns","files","readdir","rawdata","jsonData","_stripBOM","keysValues","_getKeysValues","kv","_a","_b","_validatePath","_comparePath","_split","keyChanged","escapeRegExp","INVALID_KEY","conflictingTranslations","conflictingKey","currentKey","splitCurrent","splitConflicting","baseKey","attemptedKey","DUPLICATE_PATH","EMPTY_TRANSLATION","splitKey","every","v","string","fs","eval","dirPath","readdirSync","decoder","TextDecoder","decode","stat","readDirectory","createDirectory","renderPagination","withPageSizeSelector","firstEl","_getTableHeader","sortLanguages","localeCompare","renderColumnSelector","sortedLanguages","isChecked","showFolder","filteredLanguages","rtlClass","isEmpty","selectTranslation","currentLanguage","isLoaded","loadPromise","loadTranslations","langFiles","i18nDir","waitForLoad","setLanguage","getLanguage","fallbackTranslations","keyParts","part","argIndex","parseInt","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","run","marker","runClearTimeout","Item","array","title","browser","argv","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","text","to","_webviewPanel","_instance","isSaveMessage","sendFlashyNotification","duration","assertPath","normalizeStringPosix","allowAboveRoot","lastSegmentLength","lastSlash","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","isAbsolute","trailingSeparator","joined","arg","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","out","_makeLong","dirname","hasRoot","matchedSlash","ext","start","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","root","base","_format","win32","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","Function","myStatusBarItem","createStatusBarItem","StatusBarAlignment","Left","show","treeView","createTreeView","treeDataProvider","_onDidChangeTreeData","EventEmitter","onDidChangeTreeData","getTreeItem","element","TreeItem","TreeItemCollapsibleState","None","getChildren","showCollapseAll","onDidChangeVisibility"],"sourceRoot":""}